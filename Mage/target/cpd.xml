<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
   <duplication lines="72" tokens="390">
      <file begintoken="835374" column="50" endcolumn="84" endline="119" endtoken="835763"
            line="48"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetAnyTarget.java"/>
      <file begintoken="842933" column="64" endcolumn="84" endline="117" endtoken="843322"
            line="48"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetCreatureOrPlayer.java"/>
      <codefragment><![CDATA[    public TargetAnyTarget(final TargetAnyTarget target) {
        super(target);
        this.filter = target.filter.copy();
    }

    @Override
    public Filter getFilter() {
        return this.filter;
    }

    @Override
    public boolean canTarget(UUID id, Game game) {
        Permanent permanent = game.getPermanent(id);
        if (permanent != null) {
            return filter.match(permanent, game);
        }
        Player player = game.getPlayer(id);
        return filter.match(player, game);
    }

    @Override
    public boolean canTarget(UUID id, Ability source, Game game) {
        return canTarget(source.getControllerId(), id, source, game);
    }

    @Override
    public boolean canTarget(UUID controllerId, UUID id, Ability source, Game game) {
        Permanent permanent = game.getPermanent(id);
        Player player = game.getPlayer(id);

        if (source != null) {
            MageObject targetSource = game.getObject(source);
            if (permanent != null) {
                return permanent.canBeTargetedBy(targetSource, source.getControllerId(), game) && filter.match(permanent, source.getControllerId(), source, game);
            }
            if (player != null) {
                return player.canBeTargetedBy(targetSource, source.getControllerId(), game) && filter.match(player, game);
            }
        }

        if (permanent != null) {
            return filter.match(permanent, game);
        }
        return filter.match(player, game);
    }

    /**
     * Checks if there are enough {@link Permanent} or {@link Player} that can
     * be chosen. Should only be used for Ability targets since this checks for
     * protection, shroud etc.
     *
     * @param sourceControllerId - controller of the target event source
     * @param source
     * @param game
     * @return - true if enough valid {@link Permanent} or {@link Player} exist
     */
    @Override
    public boolean canChoose(UUID sourceControllerId, Ability source, Game game) {
        int count = 0;

        MageObject targetSource = game.getObject(source);
        for (UUID playerId : game.getState().getPlayersInRange(sourceControllerId, game)) {
            Player player = game.getPlayer(playerId);
            if (player != null && player.canBeTargetedBy(targetSource, sourceControllerId, game) && filter.match(player, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }

        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getPermanentFilter(), sourceControllerId, game)) {]]></codefragment>
   </duplication>
   <duplication lines="46" tokens="353">
      <file begintoken="645940" column="26" endcolumn="10" endline="398" endtoken="646292"
            line="353"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\GameState.java"/>
      <file begintoken="646393" column="57" endcolumn="10" endline="451" endtoken="646745"
            line="406"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\GameState.java"/>
      <codefragment><![CDATA[            if (useHidden) {
                sb.append(player.getHand().getValue(game));
            } else {
                sb.append(player.getHand().size());
            }
            sb.append("library").append(player.getLibrary().size());
            sb.append("graveyard");
            sb.append(player.getGraveyard().getValue(game));
        }

        sb.append("permanents");
        List<String> perms = new ArrayList<>();
        for (Permanent permanent : battlefield.getAllPermanents()) {
            perms.add(permanent.getValue(this));
        }
        Collections.sort(perms);
        sb.append(perms);

        sb.append("spells");
        for (StackObject spell : stack) {
            sb.append(spell.getControllerId()).append(spell.getName());
            sb.append(spell.getStackAbility().toString());
            for (UUID modeId : spell.getStackAbility().getModes().getSelectedModes()) {
                Mode mode = spell.getStackAbility().getModes().get(modeId);
                if (!mode.getTargets().isEmpty()) {
                    sb.append("targets");
                    for (Target target : mode.getTargets()) {
                        sb.append(target.getTargets());
                    }
                }
            }
        }

        for (ExileZone zone : exile.getExileZones()) {
            sb.append("exile").append(zone.getName()).append(zone.getValue(game));
        }

        sb.append("combat");
        for (CombatGroup group : combat.getGroups()) {
            sb.append(group.getDefenderId()).append(group.getAttackers()).append(group.getBlockers());
        }

        return sb.toString();
    }

    public String getValue(Game game, UUID playerId) {]]></codefragment>
   </duplication>
   <duplication lines="44" tokens="302">
      <file begintoken="201687" column="53" endcolumn="16" endline="80" endtoken="201988"
            line="37"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainAbilityControlledSpellsEffect.java"/>
      <file begintoken="347787" column="43" endcolumn="16" endline="72" endtoken="348088"
            line="32"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\GainAbilitySpellsEffect.java"/>
      <codefragment><![CDATA[        return new GainAbilityControlledSpellsEffect(this);
    }

    @Override
    public boolean apply(Game game, Ability source) {
        Player player = game.getPlayer(source.getControllerId());
        Permanent permanent = game.getPermanent(source.getSourceId());
        if (player == null || permanent == null) {
            return false;
        }

        for (Card card : game.getExile().getAllCards(game)) {
            if (card.isOwnedBy(source.getControllerId())
                    && filter.match(card, game)) {
                game.getState().addOtherAbility(card, ability);
            }
        }
        for (Card card : player.getLibrary().getCards(game)) {
            if (filter.match(card, game)) {
                game.getState().addOtherAbility(card, ability);
            }
        }
        for (Card card : player.getHand().getCards(game)) {
            if (filter.match(card, game)) {
                game.getState().addOtherAbility(card, ability);
            }
        }
        for (Card card : player.getGraveyard().getCards(game)) {
            if (filter.match(card, game)) {
                game.getState().addOtherAbility(card, ability);
            }
        }

        // workaround to gain cost reduction abilities to commanders before cast (make it playable)
        game.getCommanderCardsFromCommandZone(player, CommanderCardType.ANY)
                .stream()
                .filter(card -> filter.match(card, game))
                .forEach(card -> {
                    game.getState().addOtherAbility(card, ability);
                });

        for (StackObject stackObject : game.getStack()) {
            // only spells cast, so no copies of spells
            if ((stackObject instanceof Spell)]]></codefragment>
   </duplication>
   <duplication lines="53" tokens="294">
      <file begintoken="480794" column="9" endcolumn="1" endline="113" endtoken="481087"
            line="61"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\decks\exporter\XmageDeckExporter.java"/>
      <file begintoken="481633" column="9" endcolumn="1" endline="130" endtoken="481926"
            line="78"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\decks\exporter\XmageInfoDeckExporter.java"/>
      <codefragment><![CDATA[        }

        // layout print
        if (deck.getCardLayout() != null) {
            out.print("LAYOUT MAIN:");
            writeCardLayout(out, deck.getCardLayout());
            out.println("");
            out.print("LAYOUT SIDEBOARD:");
            writeCardLayout(out, deck.getSideboardLayout());
            out.println("");
        }
    }

    private static void writeCardLayout(PrintWriter out, DeckCardLayout layout) {
        if (layout == null) {
            return;
        }
        List<List<List<DeckCardInfo>>> cardGrid = layout.getCards();
        int height = cardGrid.size();
        int width = (height > 0) ? cardGrid.get(0).size() : 0;
        out.print("(" + height + ',' + width + ')');
        out.print(layout.getSettings());
        out.print("|");
        for (List<List<DeckCardInfo>> row : cardGrid) {
            for (List<DeckCardInfo> stack : row) {
                out.print("(");
                for (int i = 0; i < stack.size(); ++i) {
                    DeckCardInfo info = stack.get(i);
                    out.printf("[%s:%s]", info.getSetCode(), info.getCardNum());
                    if (i != stack.size() - 1) {
                        out.print(",");
                    }
                }
                out.print(")");
            }
        }
    }

    @Override
    public FileFilter getFileFilter() {
        return fileFilter;
    }

    @Override
    public String getDescription() {
        return description;
    }

    @Override
    public String getDefaultFileExt() {
        return ext;
    }
}]]></codefragment>
   </duplication>
   <duplication lines="28" tokens="272">
      <file begintoken="399668" column="78" endcolumn="22" endline="109" endtoken="399939"
            line="82"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\FlashbackAbility.java"/>
      <file begintoken="403414" column="71" endcolumn="26" endline="394" endtoken="403685"
            line="367"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\ForetellAbility.java"/>
      <codefragment><![CDATA[                        return ((ModalDoubleFacesCard) card).getRightHalfCard().getSpellAbility().canActivate(playerId, game);
                    }
                }
                return card.getSpellAbility().canActivate(playerId, game);
            }
        }
        return ActivationStatus.getFalse();
    }

    @Override
    public SpellAbility getSpellAbilityToResolve(Game game) {
        Card card = game.getCard(getSourceId());
        if (card != null) {
            if (spellAbilityToResolve == null) {
                SpellAbility spellAbilityCopy = null;
                if (card instanceof SplitCard) {
                    if (((SplitCard) card).getLeftHalfCard().getName().equals(abilityName)) {
                        spellAbilityCopy = ((SplitCard) card).getLeftHalfCard().getSpellAbility().copy();
                    } else if (((SplitCard) card).getRightHalfCard().getName().equals(abilityName)) {
                        spellAbilityCopy = ((SplitCard) card).getRightHalfCard().getSpellAbility().copy();
                    }
                } else if (card instanceof ModalDoubleFacesCard) {
                    if (((ModalDoubleFacesCard) card).getLeftHalfCard().getName().equals(abilityName)) {
                        spellAbilityCopy = ((ModalDoubleFacesCard) card).getLeftHalfCard().getSpellAbility().copy();
                    } else if (((ModalDoubleFacesCard) card).getRightHalfCard().getName().equals(abilityName)) {
                        spellAbilityCopy = ((ModalDoubleFacesCard) card).getRightHalfCard().getSpellAbility().copy();
                    }
                } else {]]></codefragment>
   </duplication>
   <duplication lines="37" tokens="265">
      <file begintoken="480446" column="5" endcolumn="44" endline="56" endtoken="480710"
            line="20"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\decks\exporter\XmageDeckExporter.java"/>
      <file begintoken="481107" column="5" endcolumn="44" endline="60" endtoken="481371"
            line="21"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\decks\exporter\XmageInfoDeckExporter.java"/>
      <codefragment><![CDATA[    private final FileFilter fileFilter = new DeckFileFilter(ext, description);

    @Override
    public void writeDeck(PrintWriter out, DeckCardLists deck) {
        List<DeckCardInfo> deckMain = new ArrayList<>();
        List<DeckCardInfo> deckSideboard = new ArrayList<>();
        Map<String, Integer> amount = new HashMap<>();

        // info
        if (deck.getName() != null && !deck.getName().isEmpty()) {
            out.println("NAME:" + deck.getName());
        }
        if (deck.getAuthor() != null && !deck.getAuthor().isEmpty()) {
            out.println("AUTHOR:" + deck.getAuthor());
        }

        // main
        for (DeckCardInfo card : deck.getCards()) {
            String code = "M@" + card.getCardKey();
            int curAmount = amount.getOrDefault(code, 0);
            if (curAmount == 0) {
                deckMain.add(card);
            }
            amount.put(code, curAmount + card.getQuantity());
        }
        // sideboard
        for (DeckCardInfo card : deck.getSideboard()) {
            String code = "S@" + card.getCardKey();
            int curAmount = amount.getOrDefault(code, 0);
            if (curAmount == 0) {
                deckSideboard.add(card);
            }
            amount.put(code, curAmount + card.getQuantity());
        }

        // cards print
        for (DeckCardInfo card : deckMain) {]]></codefragment>
   </duplication>
   <duplication lines="88" tokens="247">
      <file begintoken="575994" column="5" endcolumn="10" endline="326" endtoken="576240"
            line="239"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Dungeon.java"/>
      <file begintoken="580637" column="5" endcolumn="10" endline="242" endtoken="580883"
            line="155"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Emblem.java"/>
      <file begintoken="593937" column="5" endcolumn="10" endline="241" endtoken="594183"
            line="154"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Plane.java"/>
      <codefragment><![CDATA[    }

    @Override
    public List<CardType> getCardType(Game game) {
        return emptyList;
    }

    @Override
    public SubTypes getSubtype() {
        return new SubTypes();
    }

    @Override
    public SubTypes getSubtype(Game game) {
        return new SubTypes();
    }

    @Override
    public boolean hasSubtype(SubType subtype, Game game) {
        return false;
    }

    @Override
    public EnumSet<SuperType> getSuperType() {
        return EnumSet.noneOf(SuperType.class);
    }

    @Override
    public Abilities<Ability> getAbilities() {
        return abilites;
    }

    @Override
    public boolean hasAbility(Ability ability, Game game) {
        return getAbilities().contains(ability);
    }

    @Override
    public ObjectColor getColor() {
        return emptyColor;
    }

    @Override
    public ObjectColor getColor(Game game) {
        return emptyColor;
    }

    @Override
    public ObjectColor getFrameColor(Game game) {
        return emptyColor;
    }

    @Override
    public ManaCosts<ManaCost> getManaCost() {
        return emptyCost;
    }

    @Override
    public int getManaValue() {
        return 0;
    }

    @Override
    public MageInt getPower() {
        return MageInt.EmptyMageInt;
    }

    @Override
    public MageInt getToughness() {
        return MageInt.EmptyMageInt;
    }

    @Override
    public int getStartingLoyalty() {
        return 0;
    }

    @Override
    public void setStartingLoyalty(int startingLoyalty) {
    }

    @Override
    public UUID getId() {
        return this.id;
    }

    @Override
    public Dungeon copy() {]]></codefragment>
   </duplication>
   <duplication lines="39" tokens="234">
      <file begintoken="123395" column="54" endcolumn="12" endline="89" endtoken="123628"
            line="51"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalRequirementEffect.java"/>
      <file begintoken="124122" column="54" endcolumn="12" endline="88" endtoken="124355"
            line="50"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalRestrictionEffect.java"/>
      <codefragment><![CDATA[            this.otherwiseEffect = (RequirementEffect) effect.otherwiseEffect.copy();
        }
        this.condition = effect.condition;
        this.conditionState = effect.conditionState;
        this.baseCondition = effect.baseCondition;
        this.initDone = effect.initDone;
    }

    @Override
    public void init(Ability source, Game game) {
        super.init(source, game);
        if (baseCondition instanceof LockedInCondition) {
            condition = new FixedCondition(((LockedInCondition) baseCondition).getBaseCondition().apply(game, source));
        } else {
            condition = baseCondition;
        }
        effect.setTargetPointer(this.targetPointer);
        effect.init(source, game);
        if (otherwiseEffect != null) {
            otherwiseEffect.setTargetPointer(this.targetPointer);
            otherwiseEffect.init(source, game);
        }
        initDone = true;
    }

    @Override
    public boolean applies(Permanent permanent, Ability source, Game game) {
        if (!initDone) { // if simpleStaticAbility, init won't be called
            init(source, game);
        }
        conditionState = condition.apply(game, source);
        if (conditionState) {
            effect.setTargetPointer(this.targetPointer);
            return effect.applies(permanent, source, game);
        } else if (otherwiseEffect != null) {
            otherwiseEffect.setTargetPointer(this.targetPointer);
            return otherwiseEffect.applies(permanent, source, game);
        }
        if (!conditionState && effect.getDuration() == Duration.OneUse) {]]></codefragment>
   </duplication>
   <duplication lines="38" tokens="232">
      <file begintoken="122141" column="34" endcolumn="14" endline="97" endtoken="122372"
            line="60"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalPreventionEffect.java"/>
      <file begintoken="122770" column="16" endcolumn="14" endline="88" endtoken="123001"
            line="53"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalReplacementEffect.java"/>
      <codefragment><![CDATA[        return this.discarded || effect.isDiscarded() || (otherwiseEffect != null && otherwiseEffect.isDiscarded());
    }

    @Override
    public void init(Ability source, Game game) {
        super.init(source, game);
        if (baseCondition instanceof LockedInCondition) {
            condition = new FixedCondition(((LockedInCondition) baseCondition).getBaseCondition().apply(game, source));
        } else {
            condition = baseCondition;
        }
        effect.setTargetPointer(this.targetPointer);
        effect.init(source, game);
        if (otherwiseEffect != null) {
            otherwiseEffect.setTargetPointer(this.targetPointer);
            otherwiseEffect.init(source, game);
        }
        initDone = true;
    }

    @Override
    public boolean replaceEvent(GameEvent event, Ability source, Game game) {
        if (conditionState) {
            effect.setTargetPointer(this.targetPointer);
            return effect.replaceEvent(event, source, game);
        } else if (otherwiseEffect != null) {
            otherwiseEffect.setTargetPointer(this.targetPointer);
            return otherwiseEffect.replaceEvent(event, source, game);
        }

        if (!conditionState && effect.getDuration() == Duration.OneUse) {
            used = true;
        }
        if (!conditionState && effect.getDuration() == Duration.Custom) {
            this.discard();
        }

        return false;]]></codefragment>
   </duplication>
   <duplication lines="18" tokens="216">
      <file begintoken="399467" column="39" endcolumn="17" endline="84" endtoken="399682"
            line="67"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\FlashbackAbility.java"/>
      <file begintoken="403121" column="41" endcolumn="21" endline="363" endtoken="403336"
            line="348"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\ForetellAbility.java"/>
      <codefragment><![CDATA[                if (card.getManaCost().isEmpty()) {
                    return ActivationStatus.getFalse();
                }
                // Flashback can never cast a split card by Fuse, because Fuse only works from hand
                // https://tappedout.net/mtg-questions/snapcaster-mage-and-flashback-on-a-fuse-card-one-or-both-halves-legal-targets/
                if (card instanceof SplitCard) {
                    if (((SplitCard) card).getLeftHalfCard().getName().equals(abilityName)) {
                        return ((SplitCard) card).getLeftHalfCard().getSpellAbility().canActivate(playerId, game);
                    } else if (((SplitCard) card).getRightHalfCard().getName().equals(abilityName)) {
                        return ((SplitCard) card).getRightHalfCard().getSpellAbility().canActivate(playerId, game);
                    }
                } else if (card instanceof ModalDoubleFacesCard) {
                    if (((ModalDoubleFacesCard) card).getLeftHalfCard().getName().equals(abilityName)) {
                        return ((ModalDoubleFacesCard) card).getLeftHalfCard().getSpellAbility().canActivate(playerId, game);
                    } else if (((ModalDoubleFacesCard) card).getRightHalfCard().getName().equals(abilityName)) {
                        return ((ModalDoubleFacesCard) card).getRightHalfCard().getSpellAbility().canActivate(playerId, game);
                    }
                }]]></codefragment>
   </duplication>
   <duplication lines="41" tokens="208">
      <file begintoken="608420" column="79" endcolumn="1" endline="92" endtoken="608627"
            line="52"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\draft\RichManBoosterDraft.java"/>
      <file begintoken="609005" column="51" endcolumn="1" endline="108" endtoken="609212"
            line="67"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\draft\RichManCubeBoosterDraft.java"/>
      <codefragment><![CDATA[                List<Card> nextBooster = sets.get((cardNum - 1) % sets.size()).createBooster();
                next.setBooster(nextBooster);
                if (Objects.equals(nextId, startId)) {
                    break;
                }
                nextId = table.getNext();
                next = players.get(nextId);
            }
        }
    }

    @Override
    protected boolean pickCards() {
        for (DraftPlayer player : players.values()) {
            if (cardNum > 36) {
                return false;
            }
            player.setPicking();
            player.getPlayer().pickCard(player.getBooster(), player.getDeck(), this);
        }
        cardNum++;
        synchronized (this) {
            while (!donePicking()) {
                try {
                    this.wait();
                } catch (InterruptedException ex) {
                }
            }
        }
        return true;
    }

    @Override
    public void firePickCardEvent(UUID playerId) {
        DraftPlayer player = players.get(playerId);
        int cardNum = Math.min(36, this.cardNum);
        // richman uses custom times
        int time = (int) Math.ceil(customProfiTimes[cardNum - 1] * timing.getCustomTimeoutFactor());
        playerQueryEventSource.pickCard(playerId, "Pick card", player.getBooster(), time);
    }
} ]]></codefragment>
   </duplication>
   <duplication lines="40" tokens="206">
      <file begintoken="24660" column="5" endcolumn="22" endline="83" endtoken="24865"
            line="44"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\BeginningOfPostCombatMainTriggeredAbility.java"/>
      <file begintoken="25068" column="5" endcolumn="22" endline="88" endtoken="25273"
            line="49"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\BeginningOfPreCombatMainTriggeredAbility.java"/>
      <codefragment><![CDATA[    }

    @Override
    public boolean checkTrigger(GameEvent event, Game game) {
        switch (targetController) {
            case YOU:
                boolean yours = event.getPlayerId().equals(this.controllerId);
                if (yours && setTargetPointer) {
                    if (getTargets().isEmpty()) {
                        for (Effect effect : this.getEffects()) {
                            effect.setTargetPointer(new FixedTarget(event.getPlayerId()));
                        }
                    }
                }
                return yours;
            case OPPONENT:
                if (game.getPlayer(this.controllerId).hasOpponent(event.getPlayerId(), game)) {
                    if (setTargetPointer) {
                        for (Effect effect : this.getEffects()) {
                            effect.setTargetPointer(new FixedTarget(event.getPlayerId()));
                        }
                    }
                    return true;
                }
                break;
            case ANY:
                if (setTargetPointer) {
                    for (Effect effect : this.getEffects()) {
                        effect.setTargetPointer(new FixedTarget(event.getPlayerId()));
                    }
                }
                return true;
        }
        return false;
    }

    private String generateTriggerPhrase() {
        switch (targetController) {
            case YOU:
                return "At the beginning of your postcombat main phase, " + generateZoneString();]]></codefragment>
   </duplication>
   <duplication lines="51" tokens="182">
      <file begintoken="575812" column="9" endcolumn="38" endline="238" endtoken="575993"
            line="188"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Dungeon.java"/>
      <file begintoken="580450" column="9" endcolumn="38" endline="153" endtoken="580631"
            line="103"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Emblem.java"/>
      <codefragment><![CDATA[        return null;
    }

    @Override
    public UUID getControllerId() {
        return this.controllerId;
    }

    public void setControllerId(UUID controllerId) {
        this.controllerId = controllerId;
        this.abilites.setControllerId(controllerId);
    }

    @Override
    public void setCopy(boolean isCopy, MageObject copyFrom) {
        this.copy = isCopy;
        this.copyFrom = (copyFrom != null ? copyFrom.copy() : null);
    }

    @Override
    public boolean isCopy() {
        return this.copy;
    }

    @Override
    public MageObject getCopyFrom() {
        return this.copyFrom;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public String getIdName() {
        return getName() + " [" + getId().toString().substring(0, 3) + ']';
    }

    @Override
    public String getLogName() {
        return GameLog.getColoredObjectIdName(this);
    }

    @Override
    public String getImageName() {
        return this.name;
    }

    @Override
    public void setName(String name) {]]></codefragment>
   </duplication>
   <duplication lines="33" tokens="178">
      <file begintoken="563097" column="29" endcolumn="48" endline="876" endtoken="563274"
            line="844"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\combat\Combat.java"/>
      <file begintoken="563664" column="29" endcolumn="48" endline="973" endtoken="563841"
            line="941"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\combat\Combat.java"/>
      <codefragment><![CDATA[                            boolean mayBlock = false;
                            for (UUID attackingCreatureId : getAttackers()) {
                                if (creature.canBlock(attackingCreatureId, game)) {
                                    Permanent attackingCreature = game.getPermanent(attackingCreatureId);
                                    if (attackingCreature != null) {
                                        // check if the attacker is already blocked by a max of blockers, so blocker can't block it also
                                        if (attackingCreature.getMaxBlockedBy() != 0) { // 0 = no restriction about the number of possible blockers
                                            int alreadyBlockingCreatures = 0;
                                            for (CombatGroup group : getGroups()) {
                                                if (group.getAttackers().contains(attackingCreatureId)) {
                                                    alreadyBlockingCreatures = group.getBlockers().size();
                                                    break;
                                                }
                                            }
                                            if (attackingCreature.getMaxBlockedBy() <= alreadyBlockingCreatures) {
                                                continue; // Attacker can't be blocked by more blockers so check next attacker
                                            }
                                        }
                                        // check restrictions of the creature to block that prevent it can be blocked (note L_J: not sure what this refers to...)

                                        // check if enough possible blockers are available, if true, mayBlock can be set to true
                                        if (attackingCreature.getMinBlockedBy() > 1) {
                                            int alreadyBlockingCreatures = 0;
                                            for (CombatGroup group : getGroups()) {
                                                if (group.getAttackers().contains(attackingCreatureId)) {
                                                    alreadyBlockingCreatures = group.getBlockers().size();
                                                    break;
                                                }
                                            }
                                            if (attackingCreature.getMinBlockedBy() >= alreadyBlockingCreatures) {
                                                continue; // Attacker can't be blocked by the current blocker amount so check next attacker
                                            }
                                        } else {]]></codefragment>
   </duplication>
   <duplication lines="24" tokens="177">
      <file begintoken="562902" column="46" endcolumn="35" endline="841" endtoken="563078"
            line="818"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\combat\Combat.java"/>
      <file begintoken="563474" column="47" endcolumn="35" endline="939" endtoken="563650"
            line="915"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\combat\Combat.java"/>
      <codefragment><![CDATA[                if (creature.getBlocking() > 0) {
                    // get all requirement effects that apply to the creature (e.g. is able to block attacker)
                    for (Map.Entry<RequirementEffect, Set<Ability>> entry : game.getContinuousEffects().getApplicableRequirementEffects(creature, false, game).entrySet()) {
                        RequirementEffect effect = entry.getKey();
                        // get possible mustBeBlockedByAtLeastX blocker
                        for (Ability ability : entry.getValue()) {
                            UUID toBeBlockedCreature = effect.mustBlockAttackerIfElseUnblocked(ability, game);
                            if (toBeBlockedCreature != null) {
                                CombatGroup toBeBlockedGroup = findGroup(toBeBlockedCreature);
                                if (toBeBlockedGroup != null && toBeBlockedGroup.getDefendingPlayerId().equals(creature.getControllerId())) {
                                    minNumberOfBlockersMap.put(toBeBlockedCreature, effect.getMinNumberOfBlockers());
                                    Set<UUID> potentialBlockers;
                                    if (mustBeBlockedByAtLeastX.containsKey(toBeBlockedCreature)) {
                                        potentialBlockers = mustBeBlockedByAtLeastX.get(toBeBlockedCreature);
                                    } else {
                                        potentialBlockers = new HashSet<>();
                                        mustBeBlockedByAtLeastX.put(toBeBlockedCreature, potentialBlockers);
                                    }
                                    potentialBlockers.add(creature.getId());
                                }
                            }
                        }
                        // check the mustBlockAllAttackers requirement for creatures already blocking (Blaze of Glory) -------------------------------
                        if (effect.mustBlockAllAttackers(game)) {]]></codefragment>
   </duplication>
   <duplication lines="25" tokens="177">
      <file begintoken="824405" column="13" endcolumn="13" endline="3846" endtoken="824581"
            line="3822"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\players\PlayerImpl.java"/>
      <file begintoken="824995" column="29" endcolumn="29" endline="3955" endtoken="825171"
            line="3931"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\players\PlayerImpl.java"/>
      <codefragment><![CDATA[            boolean isPlaySpell = (ability instanceof SpellAbility);
            boolean isPlayLand = (ability instanceof PlayLandAbility);

            // as original controller
            // play land restrictions
            if (isPlayLand && game.getContinuousEffects().preventedByRuleModification(
                    GameEvent.getEvent(GameEvent.EventType.PLAY_LAND, ability.getSourceId(),
                            ability, this.getId()), ability, game, true)) {
                continue;
            }
            // cast spell restrictions 1
            GameEvent castEvent = GameEvent.getEvent(GameEvent.EventType.CAST_SPELL, ability.getId(), ability, this.getId());
            castEvent.setZone(fromZone);
            if (isPlaySpell && game.getContinuousEffects().preventedByRuleModification(
                    castEvent, ability, game, true)) {
                continue;
            }
            // cast spell restrictions 2
            GameEvent castLateEvent = GameEvent.getEvent(GameEvent.EventType.CAST_SPELL_LATE,
                    ability.getId(), ability, this.getId());
            castLateEvent.setZone(fromZone);
            if (isPlaySpell && game.getContinuousEffects().preventedByRuleModification(
                    castLateEvent, ability, game, true)) {
                continue;
            }]]></codefragment>
   </duplication>
   <duplication lines="38" tokens="176">
      <file begintoken="443659" column="5" endcolumn="16" endline="128" endtoken="443834"
            line="91"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\mana\ActivatedManaAbilityImpl.java"/>
      <file begintoken="453138" column="5" endcolumn="16" endline="100" endtoken="453313"
            line="63"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\mana\TriggeredManaAbility.java"/>
      <codefragment><![CDATA[    }

    @Override
    public List<Mana> getNetMana(Game game, Mana possibleManaInPool) {
        if (isPoolDependant()) {
            List<Mana> poolDependantNetMana = new ArrayList<>();
            for (Effect effect : getEffects()) {
                if (effect instanceof ManaEffect) {
                    List<Mana> effectNetMana = ((ManaEffect) effect).getNetMana(game, possibleManaInPool, this);
                    if (effectNetMana != null) {
                        poolDependantNetMana.addAll(effectNetMana);
                    }
                }
            }
            return poolDependantNetMana;            
        }
        return getNetMana(game);
    }

    @Override
    public Set<ManaType> getProducableManaTypes(Game game) {
        Set<ManaType> manaTypes = new HashSet<>();
        for (Effect effect : getEffects()) {
            if (effect instanceof ManaEffect) {
                manaTypes.addAll(((ManaEffect) effect).getProducableManaTypes(game, this));
            }
        }
        return manaTypes;
    }

    /**
     * Used to check if the ability itself defines mana types it can produce.
     *
     * @return
     */
    @Override
    public boolean definesMana(Game game) {
        return !getNetMana(game).isEmpty();]]></codefragment>
   </duplication>
   <duplication lines="21" tokens="174">
      <file begintoken="304260" column="56" endcolumn="103" endline="79" endtoken="304433"
            line="59"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\ReturnToBattlefieldUnderOwnerControlTargetEffect.java"/>
      <file begintoken="305011" column="58" endcolumn="103" endline="82" endtoken="305184"
            line="62"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\ReturnToBattlefieldUnderYourControlTargetEffect.java"/>
      <codefragment><![CDATA[                        cardsToBattlefield.add(targetId);
                    } else {
                        Card card = game.getCard(targetId);
                        if (card instanceof MeldCard) {
                            MeldCard meldCard = (MeldCard) card;
                            Card topCard = meldCard.getTopHalfCard();
                            Card bottomCard = meldCard.getBottomHalfCard();
                            if (topCard.getZoneChangeCounter(game) == meldCard.getTopLastZoneChangeCounter() && game.getExile().containsId(topCard.getId(), game)) {
                                cardsToBattlefield.add(topCard);
                            }
                            if (bottomCard.getZoneChangeCounter(game) == meldCard.getBottomLastZoneChangeCounter() && game.getExile().containsId(bottomCard.getId(), game)) {
                                cardsToBattlefield.add(bottomCard);
                            }
                        }
                    }
                }
            } else {
                cardsToBattlefield.addAll(getTargetPointer().getTargets(game, source));
            }
            if (!cardsToBattlefield.isEmpty()) {
                controller.moveCards(cardsToBattlefield.getCards(game), Zone.BATTLEFIELD, source, game, tapped, false, true, null);]]></codefragment>
   </duplication>
   <duplication lines="52" tokens="174">
      <file begintoken="580892" column="26" endcolumn="5" endline="294" endtoken="581065"
            line="243"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Emblem.java"/>
      <file begintoken="594192" column="25" endcolumn="5" endline="293" endtoken="594365"
            line="242"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Plane.java"/>
      <codefragment><![CDATA[        return new Emblem(this);
    }

    public void setExpansionSetCodeForImage(String expansionSetCodeForImage) {
        this.expansionSetCodeForImage = expansionSetCodeForImage;
    }

    public String getExpansionSetCodeForImage() {
        return expansionSetCodeForImage;
    }

    @Override
    public int getZoneChangeCounter(Game game) {
        return 1; // Emblems can't move zones until now so return always 1
    }

    @Override
    public void updateZoneChangeCounter(Game game, ZoneChangeEvent event) {
        throw new UnsupportedOperationException("Unsupported operation");
    }

    @Override
    public void setZoneChangeCounter(int value, Game game) {
        throw new UnsupportedOperationException("Unsupported operation");
    }

    @Override
    public boolean isAllCreatureTypes(Game game) {
        return false;
    }

    @Override
    public void setIsAllCreatureTypes(boolean value) {
    }

    @Override
    public void setIsAllCreatureTypes(Game game, boolean value) {
    }

    public void discardEffects() {
        for (Ability ability : abilites) {
            for (Effect effect : ability.getEffects()) {
                if (effect instanceof ContinuousEffect) {
                    ((ContinuousEffect) effect).discard();
                }
            }
        }
    }

    @Override
    public void removePTCDA() {
    }]]></codefragment>
   </duplication>
   <duplication lines="32" tokens="162">
      <file begintoken="122374" column="5" endcolumn="12" endline="129" endtoken="122535"
            line="98"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalPreventionEffect.java"/>
      <file begintoken="123003" column="5" endcolumn="12" endline="120" endtoken="123164"
            line="89"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalReplacementEffect.java"/>
      <codefragment><![CDATA[    }

    @Override
    public boolean apply(Game game, Ability source) {
        return false;
    }

    @Override
    public boolean checksEventType(GameEvent event, Game game) {
        return effect.checksEventType(event, game)
                || (otherwiseEffect != null && otherwiseEffect.checksEventType(event, game));
    }

    @Override
    public boolean applies(GameEvent event, Ability source, Game game) {
        if (!initDone) { // if simpleStaticAbility, init won't be called
            init(source, game);
        }
        conditionState = condition.apply(game, source);
        if (conditionState) {
            effect.setTargetPointer(this.targetPointer);
            return effect.applies(event, source, game);
        } else if (otherwiseEffect != null) {
            otherwiseEffect.setTargetPointer(this.targetPointer);
            return otherwiseEffect.applies(event, source, game);
        }
        return false;
    }

    @Override
    public String getText(Mode mode) {
        if ((staticText == null || staticText.isEmpty()) && this.effect != null) { // usefull for conditional night/day card abilities]]></codefragment>
   </duplication>
   <duplication lines="30" tokens="161">
      <file begintoken="180707" column="5" endcolumn="31" endline="108" endtoken="180867"
            line="79"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BecomesColorAllEffect.java"/>
      <file begintoken="181695" column="5" endcolumn="31" endline="98" endtoken="181855"
            line="70"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BecomesColorSourceEffect.java"/>
      <file begintoken="182059" column="5" endcolumn="31" endline="106" endtoken="182219"
            line="77"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BecomesColorTargetEffect.java"/>
      <codefragment><![CDATA[    }

    @Override
    public void init(Ability source, Game game) {
        Player controller = game.getPlayer(source.getControllerId());
        if (controller == null) {
            return;
        }
        if (setColor == null) {
            ChoiceColor choice = new ChoiceColor();
            if (!controller.choose(Outcome.PutManaInPool, choice, game)) {
                discard();
                return;
            }
            setColor = choice.getColor();
            if (!game.isSimulation()) {
                game.informPlayers(controller.getLogName() + " has chosen the color: " + setColor.toString());
            }
        }

        super.init(source, game); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean apply(Game game, Ability source) {
        Player controller = game.getPlayer(source.getControllerId());
        if (controller == null) {
            return false;
        }
        if (setColor != null) {]]></codefragment>
   </duplication>
   <duplication lines="29" tokens="154">
      <file begintoken="127864" column="5" endcolumn="1" endline="81" endtoken="128017"
            line="53"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\dynamicvalue\common\CardTypesInGraveyardCount.java"/>
      <file begintoken="366268" column="5" endcolumn="1" endline="79" endtoken="366421"
            line="51"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\hint\common\CardTypesInGraveyardHint.java"/>
      <codefragment><![CDATA[    }

    private final Stream<Card> getStream(Game game, Ability ability) {
        Collection<UUID> playerIds;
        switch (this) {
            case YOU:
                Player player = game.getPlayer(ability.getControllerId());
                return player == null
                        ? null : player
                        .getGraveyard()
                        .getCards(game)
                        .stream();
            case OPPONENTS:
                playerIds = game.getOpponents(ability.getControllerId());
                break;
            case ALL:
                playerIds = game.getState().getPlayersInRange(ability.getControllerId(), game);
                break;
            default:
                return null;
        }
        return playerIds.stream()
                .map(game::getPlayer)
                .filter(Objects::nonNull)
                .map(Player::getGraveyard)
                .map(graveyard -> graveyard.getCards(game))
                .flatMap(Collection::stream);
    }
}]]></codefragment>
   </duplication>
   <duplication lines="18" tokens="154">
      <file begintoken="668592" column="9" endcolumn="13" endline="1021" endtoken="668745"
            line="1004"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\permanent\PermanentImpl.java"/>
      <file begintoken="815285" column="20" endcolumn="13" endline="2159" endtoken="815438"
            line="2142"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\players\PlayerImpl.java"/>
      <codefragment><![CDATA[        attacker = game.getPermanentOrLKIBattlefield(attackerId);
        if (attacker == null) {
            StackObject stackObject = game.getStack().getStackObject(attackerId);
            if (stackObject != null) {
                attacker = stackObject.getStackAbility().getSourceObject(game);
            } else {
                attacker = game.getObject(attackerId);
            }
            if (attacker instanceof Spell) {
                sourceAbilities = ((Spell) attacker).getAbilities(game);
                sourceControllerId = ((Spell) attacker).getControllerId();
            } else if (attacker instanceof Card) {
                sourceAbilities = ((Card) attacker).getAbilities(game);
                sourceControllerId = ((Card) attacker).getOwnerId();
            } else if (attacker instanceof CommandObject) {
                sourceControllerId = ((CommandObject) attacker).getControllerId();
                sourceAbilities = attacker.getAbilities();
            } else {]]></codefragment>
   </duplication>
   <duplication lines="29" tokens="153">
      <file begintoken="400350" column="46" endcolumn="72" endline="228" endtoken="400502"
            line="200"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\FlashbackAbility.java"/>
      <file begintoken="411053" column="46" endcolumn="72" endline="130" endtoken="411205"
            line="102"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\JumpStartAbility.java"/>
      <codefragment><![CDATA[        return new FlashbackReplacementEffect(this);
    }

    @Override
    public boolean apply(Game game, Ability source) {
        return true;
    }

    @Override
    public boolean replaceEvent(GameEvent event, Ability source, Game game) {
        Player controller = game.getPlayer(source.getControllerId());
        if (controller != null) {
            Card card = game.getCard(event.getTargetId());
            if (card != null) {
                discard();
                return controller.moveCards(
                        card, Zone.EXILED, source, game, false, false, false, event.getAppliedEffects());
            }
        }
        return false;
    }

    @Override
    public boolean checksEventType(GameEvent event, Game game) {
        return event.getType() == GameEvent.EventType.ZONE_CHANGE;
    }

    @Override
    public boolean applies(GameEvent event, Ability source, Game game) {]]></codefragment>
   </duplication>
   <duplication lines="28" tokens="152">
      <file begintoken="118764" column="9" endcolumn="18" endline="94" endtoken="118915"
            line="67"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalContinuousEffect.java"/>
      <file begintoken="122113" column="9" endcolumn="18" endline="81" endtoken="122264"
            line="54"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalPreventionEffect.java"/>
      <codefragment><![CDATA[        this.baseCondition = effect.baseCondition;
        this.initDone = effect.initDone;
    }

    @Override
    public boolean isDiscarded() {
        return this.discarded || effect.isDiscarded() || (otherwiseEffect != null && otherwiseEffect.isDiscarded());
    }

    @Override
    public void init(Ability source, Game game) {
        super.init(source, game);
        if (baseCondition instanceof LockedInCondition) {
            condition = new FixedCondition(((LockedInCondition) baseCondition).getBaseCondition().apply(game, source));
        } else {
            condition = baseCondition;
        }
        effect.setTargetPointer(this.targetPointer);
        effect.init(source, game);
        if (otherwiseEffect != null) {
            otherwiseEffect.setTargetPointer(this.targetPointer);
            otherwiseEffect.init(source, game);
        }
        initDone = true;
    }

    @Override
    public boolean apply(Layer layer, SubLayer sublayer, Ability source, Game game) {]]></codefragment>
   </duplication>
   <duplication lines="23" tokens="150">
      <file begintoken="191150" column="9" endcolumn="33" endline="87" endtoken="191299"
            line="65"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BoostEnchantedEffect.java"/>
      <file begintoken="204264" column="9" endcolumn="33" endline="84" endtoken="204413"
            line="64"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainAbilityWithAttachmentEffect.java"/>
      <codefragment><![CDATA[        if (affectedObjectsSet) {
            // Added boosts of activated or triggered abilities exist independent from the source they are created by
            // so a continuous effect for the permanent itself with the attachment is created
            Permanent equipment = game.getPermanentOrLKIBattlefield(source.getSourceId());
            if (equipment != null && equipment.getAttachedTo() != null) {
                this.setTargetPointer(new FixedTarget(equipment.getAttachedTo(), game.getState().getZoneChangeCounter(equipment.getAttachedTo())));
            }
        }
    }

    @Override
    public boolean apply(Game game, Ability source) {
        Permanent permanent = null;
        if (affectedObjectsSet) {
            permanent = game.getPermanent(targetPointer.getFirst(game, source));
            if (permanent == null) {
                discard();
                return true;
            }
        } else {
            Permanent equipment = game.getPermanent(source.getSourceId());
            if (equipment != null && equipment.getAttachedTo() != null) {
                permanent = game.getPermanent(equipment.getAttachedTo());]]></codefragment>
   </duplication>
   <duplication lines="24" tokens="150">
      <file begintoken="320533" column="17" endcolumn="45" endline="99" endtoken="320682"
            line="76"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\search\SearchLibraryPutInHandEffect.java"/>
      <file begintoken="321198" column="17" endcolumn="45" endline="112" endtoken="321347"
            line="89"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\search\SearchLibraryPutInHandOrOnBattlefieldEffect.java"/>
      <codefragment><![CDATA[                if (revealCards) {
                    String name = "Reveal";
                    Card sourceCard = game.getCard(source.getSourceId());
                    if (sourceCard != null) {
                        name = sourceCard.getIdName();
                    }
                    controller.revealCards(name, cards, game);
                }
            }
            controller.shuffleLibrary(source, game);
            return true;
        }
        if (forceShuffle) {
            controller.shuffleLibrary(source, game);
        }
        return false;
    }

    private void setText() {
        StringBuilder sb = new StringBuilder();
        sb.append(rulePrefix);
        if (target.getNumberOfTargets() == 0 && target.getMaxNumberOfTargets() > 0) {
            sb.append("up to ").append(CardUtil.numberToText(target.getMaxNumberOfTargets())).append(' ');
            sb.append(target.getTargetName());]]></codefragment>
   </duplication>
   <duplication lines="45" tokens="150">
      <file begintoken="576274" column="41" endcolumn="1" endline="379" endtoken="576423"
            line="335"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Dungeon.java"/>
      <file begintoken="580917" column="16" endcolumn="1" endline="295" endtoken="581066"
            line="251"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Emblem.java"/>
      <codefragment><![CDATA[        this.expansionSetCodeForImage = expansionSetCodeForImage;
    }

    @Override
    public int getZoneChangeCounter(Game game) {
        return 1;
    }

    @Override
    public void updateZoneChangeCounter(Game game, ZoneChangeEvent event) {
        throw new UnsupportedOperationException("Unsupported operation");
    }

    @Override
    public void setZoneChangeCounter(int value, Game game) {
        throw new UnsupportedOperationException("Unsupported operation");
    }

    @Override
    public boolean isAllCreatureTypes(Game game) {
        return false;
    }

    @Override
    public void setIsAllCreatureTypes(boolean value) {
    }

    @Override
    public void setIsAllCreatureTypes(Game game, boolean value) {
    }

    public void discardEffects() {
        for (Ability ability : abilites) {
            for (Effect effect : ability.getEffects()) {
                if (effect instanceof ContinuousEffect) {
                    ((ContinuousEffect) effect).discard();
                }
            }
        }
    }

    @Override
    public void removePTCDA() {
    }
}]]></codefragment>
   </duplication>
   <duplication lines="44" tokens="149">
      <file begintoken="576274" column="41" endcolumn="5" endline="378" endtoken="576422"
            line="335"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Dungeon.java"/>
      <file begintoken="594217" column="16" endcolumn="5" endline="293" endtoken="594365"
            line="250"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Plane.java"/>
      <codefragment><![CDATA[        this.expansionSetCodeForImage = expansionSetCodeForImage;
    }

    @Override
    public int getZoneChangeCounter(Game game) {
        return 1;
    }

    @Override
    public void updateZoneChangeCounter(Game game, ZoneChangeEvent event) {
        throw new UnsupportedOperationException("Unsupported operation");
    }

    @Override
    public void setZoneChangeCounter(int value, Game game) {
        throw new UnsupportedOperationException("Unsupported operation");
    }

    @Override
    public boolean isAllCreatureTypes(Game game) {
        return false;
    }

    @Override
    public void setIsAllCreatureTypes(boolean value) {
    }

    @Override
    public void setIsAllCreatureTypes(Game game, boolean value) {
    }

    public void discardEffects() {
        for (Ability ability : abilites) {
            for (Effect effect : ability.getEffects()) {
                if (effect instanceof ContinuousEffect) {
                    ((ContinuousEffect) effect).discard();
                }
            }
        }
    }

    @Override
    public void removePTCDA() {
    }]]></codefragment>
   </duplication>
   <duplication lines="16" tokens="148">
      <file begintoken="206123" column="9" endcolumn="9" endline="155" endtoken="206270"
            line="140"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainControlAndUntapTargetEffect.java"/>
      <file begintoken="206772" column="9" endcolumn="9" endline="152" endtoken="206919"
            line="137"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainControlTargetEffect.java"/>
      <codefragment><![CDATA[        }

        Target target = mode.getTargets().get(0);
        StringBuilder sb = new StringBuilder("gain control of ");
        if (target.getMaxNumberOfTargets() > 1) {
            if (target.getNumberOfTargets() < target.getMaxNumberOfTargets()) {
                sb.append("up to ");
            }
            sb.append(CardUtil.numberToText(target.getMaxNumberOfTargets())).append(" target ");
        } else if (!target.getTargetName().startsWith("another")) {
            sb.append("target ");
        }
        sb.append(mode.getTargets().get(0).getTargetName());
        if (!duration.toString().isEmpty()) {
            sb.append(' ').append(duration.toString());
        }]]></codefragment>
   </duplication>
   <duplication lines="19" tokens="148">
      <file begintoken="479698" column="98" endcolumn="18" endline="39" endtoken="479845"
            line="21"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\decks\exporter\MtgArenaDeckExporter.java"/>
      <file begintoken="480096" column="78" endcolumn="18" endline="36" endtoken="480243"
            line="18"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\decks\exporter\MtgOnlineDeckExporter.java"/>
      <codefragment><![CDATA[    private static final Map<String, String> SET_CODE_REPLACEMENTS = ImmutableMap.of("DOM", "DAR");

    @Override
    public void writeDeck(PrintWriter out, DeckCardLists deck) {
        Map<String, Integer> amount = new HashMap<>();
        List<String> deckMain = prepareCardsList(deck.getCards(), amount, "M@");
        List<String> deckSideboard = prepareCardsList(deck.getSideboard(), amount, "S@");

        printCards(out, deckMain, amount, "M@");
        if (deckSideboard.size() > 0) {
            out.println();
            printCards(out, deckSideboard, amount, "S@");
        }
    }

    private List<String> prepareCardsList(List<DeckCardInfo> sourceCards, Map<String, Integer> amount, String prefix) {
        List<String> res = new ArrayList<>();
        for (DeckCardInfo card : sourceCards) {
            String setCode = card.getSetCode().toUpperCase(Locale.ENGLISH);]]></codefragment>
   </duplication>
   <duplication lines="20" tokens="147">
      <file begintoken="210433" column="9" endcolumn="36" endline="92" endtoken="210579"
            line="73"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\LoseAbilityOrAnotherAbilityTargetEffect.java"/>
      <file begintoken="211003" column="9" endcolumn="36" endline="66" endtoken="211149"
            line="47"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\LoseAbilityTargetEffect.java"/>
      <codefragment><![CDATA[        }
        return true;
    }

    @Override
    public String getText(Mode mode) {
        if (staticText != null && !staticText.isEmpty()) {
            return staticText;
        }
        StringBuilder sb = new StringBuilder();
        Target target = mode.getTargets().get(0);
        if (target.getNumberOfTargets() > 1) {
            if (target.getNumberOfTargets() < target.getMaxNumberOfTargets()) {
                sb.append("Up to");
            }
            sb.append(target.getMaxNumberOfTargets()).append(" target ").append(target.getTargetName()).append(" loses ");
        } else {
            sb.append("Target ").append(target.getTargetName()).append(" loses ");
        }
        sb.append(ability.getRule());]]></codefragment>
   </duplication>
   <duplication lines="28" tokens="147">
      <file begintoken="255768" column="67" endcolumn="12" endline="97" endtoken="255914"
            line="70"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\DontUntapInControllersNextUntapStepTargetEffect.java"/>
      <file begintoken="257612" column="60" endcolumn="12" endline="77" endtoken="257758"
            line="47"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\DontUntapInPlayersNextUntapStepAllEffect.java"/>
      <codefragment><![CDATA[        return new DontUntapInControllersNextUntapStepTargetEffect(this);
    }

    @Override
    public boolean apply(Game game, Ability source) {
        return false;
    }

    @Override
    public String getInfoMessage(Ability source, GameEvent event, Game game) {
        MageObject mageObject = game.getObject(source);
        Permanent permanentToUntap = game.getPermanent((event.getTargetId()));
        if (permanentToUntap != null && mageObject != null) {
            return permanentToUntap.getLogName() + " doesn't untap (" + mageObject.getLogName() + ')';
        }
        return null;
    }

    @Override
    public boolean checksEventType(GameEvent event, Game game) {
        return event.getType() == GameEvent.EventType.UNTAP_STEP || event.getType() == GameEvent.EventType.UNTAP;
    }

    @Override
    public boolean applies(GameEvent event, Ability source, Game game) {
        // the check if a permanent untap phase is already handled is needed if multiple effects are added to prevent untap in next untap step of controller
        // if we don't check it for every untap step of a turn only one effect would be consumed instead of all be valid for the next untap step
        if (event.getType() == GameEvent.EventType.UNTAP_STEP) {]]></codefragment>
   </duplication>
   <duplication lines="36" tokens="147">
      <file begintoken="479919" column="29" endcolumn="1" endline="80" endtoken="480065"
            line="45"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\decks\exporter\MtgArenaDeckExporter.java"/>
      <file begintoken="480280" column="43" endcolumn="1" endline="74" endtoken="480426"
            line="39"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\decks\exporter\MtgOnlineDeckExporter.java"/>
      <codefragment><![CDATA[                res.add(name);
            }
            amount.put(code, curAmount + card.getQuantity());
        }
        return res;
    }

    private void printCards(PrintWriter out, List<String> deck, Map<String, Integer> amount, String prefix) {
        if (deck.size() == 0) return;

        boolean firstCard = true;
        for (String name : deck) {
            if (!firstCard) out.println();
            out.print(amount.get(prefix + name));
            out.print(' ');
            out.print(name);
            firstCard = false;
        }
        out.println();
    }

    @Override
    public FileFilter getFileFilter() {
        return fileFilter;
    }

    @Override
    public String getDescription() {
        return description;
    }

    @Override
    public String getDefaultFileExt() {
        return ext;
    }
}]]></codefragment>
   </duplication>
   <duplication lines="46" tokens="145">
      <file begintoken="580414" column="13" endcolumn="14" endline="134" endtoken="580558"
            line="89"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Emblem.java"/>
      <file begintoken="593670" column="13" endcolumn="14" endline="125" endtoken="593814"
            line="80"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Plane.java"/>
      <codefragment><![CDATA[            }
        }
    }

    @Override
    public MageObject getSourceObject() {
        return sourceObject;
    }

    @Override
    public UUID getSourceId() {
        if (sourceObject != null) {
            return sourceObject.getId();
        }
        return null;
    }

    @Override
    public UUID getControllerId() {
        return this.controllerId;
    }

    public void setControllerId(UUID controllerId) {
        this.controllerId = controllerId;
        this.abilites.setControllerId(controllerId);
    }

    @Override
    public void setCopy(boolean isCopy, MageObject copyFrom) {
        this.copy = isCopy;
        this.copyFrom = (copyFrom != null ? copyFrom.copy() : null);
    }

    @Override
    public boolean isCopy() {
        return this.copy;
    }

    @Override
    public MageObject getCopyFrom() {
        return this.copyFrom;
    }

    @Override
    public String getName() {
        return name;]]></codefragment>
   </duplication>
   <duplication lines="25" tokens="143">
      <file begintoken="429919" column="63" endcolumn="45" endline="73" endtoken="430061"
            line="49"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\RiotAbility.java"/>
      <file begintoken="441295" column="62" endcolumn="45" endline="76" endtoken="441437"
            line="52"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\UnleashAbility.java"/>
      <codefragment><![CDATA[    private RiotReplacementEffect(final RiotReplacementEffect effect) {
        super(effect);
    }

    @Override
    public boolean checksEventType(GameEvent event, Game game) {
        return event.getType() == GameEvent.EventType.ENTERS_THE_BATTLEFIELD;
    }

    @Override
    public boolean applies(GameEvent event, Ability source, Game game) {
        return event.getTargetId().equals(source.getSourceId());
    }

    @Override
    public boolean apply(Game game, Ability source) {
        return false;
    }

    @Override
    public boolean replaceEvent(GameEvent event, Ability source, Game game) {
        Permanent creature = ((EntersTheBattlefieldEvent) event).getTarget();
        Player controller = game.getPlayer(source.getControllerId());
        if (creature != null && controller != null) {
            if (controller.chooseUse(outcome, "Have " + creature.getLogName() + " enter the battlefield with a +1/+1 counter on it or with haste?", null, "+1/+1 counter", "Haste", source, game)) {]]></codefragment>
   </duplication>
   <duplication lines="36" tokens="143">
      <file begintoken="835765" column="103" endcolumn="84" endline="154" endtoken="835907"
            line="119"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetAnyTarget.java"/>
      <file begintoken="843324" column="102" endcolumn="84" endline="149" endtoken="843466"
            line="117"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetCreatureOrPlayer.java"/>
      <codefragment><![CDATA[        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getPermanentFilter(), sourceControllerId, game)) {
            if (permanent.canBeTargetedBy(targetSource, sourceControllerId, game) && filter.match(permanent, sourceControllerId, source, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }

        return false;
    }

    /**
     * Checks if there are enough {@link Permanent} or {@link Player} that can
     * be selected. Should not be used for Ability targets since this does not
     * check for protection, shroud etc.
     *
     * @param sourceControllerId - controller of the select event
     * @param game
     * @return - true if enough valid {@link Permanent} or {@link Player} exist
     */
    @Override
    public boolean canChoose(UUID sourceControllerId, Game game) {
        int count = 0;

        for (UUID playerId : game.getState().getPlayersInRange(sourceControllerId, game)) {
            Player player = game.getPlayer(playerId);
            if (filter.match(player, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }

        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getPermanentFilter(), sourceControllerId, game)) {]]></codefragment>
   </duplication>
   <duplication lines="28" tokens="142">
      <file begintoken="670074" column="55" endcolumn="40" endline="1242" endtoken="670215"
            line="1215"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\permanent\PermanentImpl.java"/>
      <file begintoken="806268" column="28" endcolumn="40" endline="665" endtoken="806409"
            line="639"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\players\PlayerImpl.java"/>
      <codefragment><![CDATA[            if (game.getPlayer(this.getControllerId()).hasOpponent(sourceControllerId, game)
                    && null == game.getContinuousEffects().asThough(this.getId(), AsThoughEffectType.HEXPROOF, null, sourceControllerId, game)
                    && abilities.stream()
                    .filter(HexproofBaseAbility.class::isInstance)
                    .map(HexproofBaseAbility.class::cast)
                    .anyMatch(ability -> ability.checkObject(source, game))) {
                return false;
            }

            if (hasProtectionFrom(source, game)) {
                return false;
            }

            // example: Fiendslayer Paladin tried to target with Ultimate Price
            return !game.getContinuousEffects().preventedByRuleModification(
                    new TargetEvent(this, source.getId(), sourceControllerId),
                    null,
                    game,
                    true
            );
        }

        return true;
    }

    @Override
    public boolean hasProtectionFrom(MageObject source, Game game) {
        for (ProtectionAbility ability : this.getAbilities(game).getProtectionAbilities()) {]]></codefragment>
   </duplication>
   <duplication lines="35" tokens="142">
      <file begintoken="823113" column="37" endcolumn="13" endline="3641" endtoken="823254"
            line="3607"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\players\PlayerImpl.java"/>
      <file begintoken="823457" column="37" endcolumn="13" endline="3711" endtoken="823598"
            line="3672"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\players\PlayerImpl.java"/>
      <codefragment><![CDATA[                                    if (cost instanceof ManaCost) {
                                        manaCosts.add((ManaCost) cost);
                                    }
                                }
                            }

                            if (manaCosts.isEmpty()) {
                                return true;
                            } else {
                                if (availableMana == null) {
                                    return true;
                                }

                                // alternative cost reduce
                                copyAbility = ability.copy();
                                copyAbility.getManaCostsToPay().clear();
                                copyAbility.getManaCostsToPay().addAll(manaCosts.copy());
                                copyAbility.adjustCosts(game);
                                game.getContinuousEffects().costModification(copyAbility, game);

                                // reduced all cost
                                if (copyAbility.getManaCostsToPay().isEmpty()) {
                                    return true;
                                }

                                for (Mana mana : copyAbility.getManaCostsToPay().getOptions()) {
                                    if (availableMana.enough(mana)) {
                                        return true;
                                    }
                                }
                            }
                        }
                    }
                }
            }]]></codefragment>
   </duplication>
   <duplication lines="18" tokens="139">
      <file begintoken="189435" column="13" endcolumn="16" endline="129" endtoken="189573"
            line="112"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BoostAllEffect.java"/>
      <file begintoken="190506" column="13" endcolumn="16" endline="119" endtoken="190644"
            line="102"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BoostControlledEffect.java"/>
      <codefragment><![CDATA[            power = StaticValue.get(power.calculate(game, source, this));
            toughness = StaticValue.get(toughness.calculate(game, source, this));
        }
    }

    @Override
    public boolean apply(Game game, Ability source) {
        if (this.affectedObjectsSet) {
            for (Iterator<MageObjectReference> it = affectedObjectList.iterator(); it.hasNext(); ) { // filter may not be used again, because object can have changed filter relevant attributes but still geets boost
                Permanent permanent = it.next().getPermanent(game);
                if (permanent != null) {
                    permanent.addPower(power.calculate(game, source, this));
                    permanent.addToughness(toughness.calculate(game, source, this));
                } else {
                    it.remove(); // no longer on the battlefield, remove reference to object
                }
            }
        } else {]]></codefragment>
   </duplication>
   <duplication lines="36" tokens="139">
      <file begintoken="835728" column="120" endcolumn="16" endline="146" endtoken="835866"
            line="111"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetAnyTarget.java"/>
      <file begintoken="849143" column="148" endcolumn="16" endline="162" endtoken="849281"
            line="129"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetPermanentOrPlayer.java"/>
      <codefragment><![CDATA[            if (player != null && player.canBeTargetedBy(targetSource, sourceControllerId, game) && filter.match(player, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }

        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getPermanentFilter(), sourceControllerId, game)) {
            if (permanent.canBeTargetedBy(targetSource, sourceControllerId, game) && filter.match(permanent, sourceControllerId, source, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }

        return false;
    }

    /**
     * Checks if there are enough {@link Permanent} or {@link Player} that can
     * be selected. Should not be used for Ability targets since this does not
     * check for protection, shroud etc.
     *
     * @param sourceControllerId - controller of the select event
     * @param game
     * @return - true if enough valid {@link Permanent} or {@link Player} exist
     */
    @Override
    public boolean canChoose(UUID sourceControllerId, Game game) {
        int count = 0;

        for (UUID playerId : game.getState().getPlayersInRange(sourceControllerId, game)) {
            Player player = game.getPlayer(playerId);
            if (filter.match(player, game)) {]]></codefragment>
   </duplication>
   <duplication lines="27" tokens="139">
      <file begintoken="836233" column="42" endcolumn="10" endline="228" endtoken="836371"
            line="202"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetAnyTarget.java"/>
      <file begintoken="843808" column="41" endcolumn="10" endline="216" endtoken="843946"
            line="191"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetCreatureOrPlayer.java"/>
      <codefragment><![CDATA[            if (filter.getPermanentFilter().match(permanent, sourceControllerId, null, game)) {
                possibleTargets.add(permanent.getId());
            }
        }

        return possibleTargets;
    }

    @Override
    public String getTargetedName(Game game) {
        StringBuilder sb = new StringBuilder();
        for (UUID targetId : getTargets()) {
            Permanent permanent = game.getPermanent(targetId);
            if (permanent != null) {
                sb.append(permanent.getLogName()).append(' ');
            } else {
                Player player = game.getPlayer(targetId);
                if (player != null) {
                    sb.append(player.getLogName()).append(' ');
                }
            }
        }
        return sb.toString().trim();
    }

    @Override
    public TargetAnyTarget copy() {]]></codefragment>
   </duplication>
   <duplication lines="30" tokens="138">
      <file begintoken="45252" column="5" endcolumn="14" endline="80" endtoken="45389"
            line="51"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\DrawCardTriggeredAbility.java"/>
      <file begintoken="45808" column="5" endcolumn="14" endline="76" endtoken="45945"
            line="47"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\DrawSecondCardTriggeredAbility.java"/>
      <codefragment><![CDATA[    }

    @Override
    public boolean checkEventType(GameEvent event, Game game) {
        return event.getType() == GameEvent.EventType.DREW_CARD;
    }

    @Override
    public boolean checkTrigger(GameEvent event, Game game) {
        switch (targetController) {
            case YOU:
                if (!isControlledBy(event.getPlayerId())) {
                    return false;
                }
                break;
            case ACTIVE:
                if (!game.isActivePlayer(event.getPlayerId())) {
                    return false;
                }
                break;
            case OPPONENT:
                Player controller = game.getPlayer(controllerId);
                if (controller == null || !controller.hasOpponent(event.getPlayerId(), game)) {
                    return false;
                }
                break;
            default:
                throw new IllegalArgumentException("TargetController " + targetController + " not supported");
        }
        return drawCardWatcher.checkEvent(event.getPlayerId(), event, cardNumber);]]></codefragment>
   </duplication>
   <duplication lines="20" tokens="138">
      <file begintoken="73071" column="47" endcolumn="13" endline="33" endtoken="73208"
            line="14"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\condition\common\CastFromEverywhereSourceCondition.java"/>
      <file begintoken="73231" column="50" endcolumn="13" endline="35" endtoken="73368"
            line="16"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\condition\common\CastFromHandSourcePermanentCondition.java"/>
      <codefragment><![CDATA[public enum CastFromEverywhereSourceCondition implements Condition {

    instance;

    @Override
    public boolean apply(Game game, Ability source) {
        Permanent permanent = game.getPermanentEntering(source.getSourceId());
        int zccDiff = 0;
        if (permanent == null) {
            permanent = game.getPermanentOrLKIBattlefield(source.getSourceId()); // can be alredy again removed from battlefield so also check LKI
            zccDiff = -1;
        }
        if (permanent != null) {
            // check that the spell is still in the LKI
            Spell spell = game.getStack().getSpell(source.getSourceId());
            if (spell == null || spell.getZoneChangeCounter(game) != permanent.getZoneChangeCounter(game) + zccDiff) {
                if (game.getLastKnownInformation(source.getSourceId(), Zone.STACK, permanent.getZoneChangeCounter(game) + zccDiff) == null) {
                    return false;
                }
            }]]></codefragment>
   </duplication>
   <duplication lines="26" tokens="138">
      <file begintoken="205811" column="51" endcolumn="64" endline="97" endtoken="205948"
            line="72"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainControlAndUntapTargetEffect.java"/>
      <file begintoken="206478" column="43" endcolumn="64" endline="97" endtoken="206615"
            line="72"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainControlTargetEffect.java"/>
      <codefragment><![CDATA[        return new GainControlAndUntapTargetEffect(this);
    }

    @Override
    public void init(Ability source, Game game) {
        if (this.controllingPlayerId == null && fixedControl) {
            this.controllingPlayerId = source.getControllerId();
        }
        super.init(source, game);
    }

    @Override
    public boolean apply(Game game, Ability source) {
        Player controller = game.getPlayer(source.getControllerId());
        if (controller == null) {
            discard(); // controller no longer exists
            return false;
        }
        boolean oneTargetStillExists = false;
        for (UUID permanentId : getTargetPointer().getTargets(game, source)) {
            Permanent permanent = game.getPermanent(permanentId);
            if (permanent == null) {
                continue;
            }
            oneTargetStillExists = true;
            if (permanent.isControlledBy(controllingPlayerId)) {]]></codefragment>
   </duplication>
   <duplication lines="21" tokens="137">
      <file begintoken="903158" column="9" endcolumn="21" endline="46" endtoken="903294"
            line="26"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\watchers\common\PermanentsEnteredBattlefieldWatcher.java"/>
      <file begintoken="903490" column="9" endcolumn="21" endline="48" endtoken="903626"
            line="28"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\watchers\common\PermanentsEnteredBattlefieldYourLastTurnWatcher.java"/>
      <codefragment><![CDATA[        if (event.getType() == GameEvent.EventType.ENTERS_THE_BATTLEFIELD) {
            Permanent perm = game.getPermanentEntering(event.getTargetId());
            if (perm == null) {
                perm = game.getPermanent(event.getTargetId());
            }
            if (perm != null) {
                List<Permanent> permanents;
                if (!enteringBattlefield.containsKey(perm.getControllerId())) {
                    permanents = new ArrayList<>();
                    enteringBattlefield.put(perm.getControllerId(), permanents);
                } else {
                    permanents = enteringBattlefield.get(perm.getControllerId());
                }
                permanents.add(perm.copy()); // copy needed because attributes like color could be changed later
            }
        }
    }

    @Override
    public void reset() {
        super.reset();]]></codefragment>
   </duplication>
   <duplication lines="22" tokens="136">
      <file begintoken="836096" column="81" endcolumn="23" endline="202" endtoken="836231"
            line="181"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetAnyTarget.java"/>
      <file begintoken="849536" column="96" endcolumn="23" endline="208" endtoken="849671"
            line="191"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetPermanentOrPlayer.java"/>
      <codefragment><![CDATA[            if (permanent.canBeTargetedBy(targetSource, sourceControllerId, game)
                    && filter.match(permanent, sourceControllerId, source, game)) {
                possibleTargets.add(permanent.getId());
            }
        }

        return possibleTargets;
    }

    @Override
    public Set<UUID> possibleTargets(UUID sourceControllerId, Game game) {
        Set<UUID> possibleTargets = new HashSet<>();

        for (UUID playerId : game.getState().getPlayersInRange(sourceControllerId, game)) {
            Player player = game.getPlayer(playerId);
            if (filter.match(player, game)) {
                possibleTargets.add(playerId);
            }
        }

        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getPermanentFilter(), sourceControllerId, game)) {
            if (filter.getPermanentFilter().match(permanent, sourceControllerId, null, game)) {]]></codefragment>
   </duplication>
   <duplication lines="28" tokens="135">
      <file begintoken="83772" column="51" endcolumn="30" endline="70" endtoken="83906"
            line="43"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\condition\common\SourceHasCounterCondition.java"/>
      <file begintoken="85958" column="54" endcolumn="30" endline="69" endtoken="86092"
            line="43"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\condition\common\TargetHasCounterCondition.java"/>
      <codefragment><![CDATA[            card = game.getCard(source.getSourceId());
            if (card == null) {
                return false;
            }
        }
        if (from != -1) { //range compare
            int count;
            if (card != null) {
                count = card.getCounters(game).getCount(counterType);
            } else {
                count = permanent.getCounters(game).getCount(counterType);
            }
            if (to == Integer.MAX_VALUE) {
                return count >= from;
            }
            return count >= from && count <= to;
        } else // single compare (lte)
        {
            if (card != null) {
                return card.getCounters(game).getCount(counterType) >= amount;
            } else {
                return permanent.getCounters(game).getCount(counterType) >= amount;
            }
        }
    }

    @Override
    public String toString() {]]></codefragment>
   </duplication>
   <duplication lines="18" tokens="134">
      <file begintoken="258406" column="13" endcolumn="35" endline="87" endtoken="258539"
            line="70"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\DoUnlessAnyPlayerPaysEffect.java"/>
      <file begintoken="260275" column="13" endcolumn="35" endline="96" endtoken="260408"
            line="80"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\DoUnlessTargetPlayerOrTargetsControllerPaysEffect.java"/>
      <codefragment><![CDATA[            if (cost != null) {
                costToPay = cost.copy();
                costValueMessage = costToPay.getText();
            } else {
                costToPay = ManaUtil.createManaCost(genericMana, game, source, this);
                costValueMessage = "{" + genericMana.calculate(game, source, this) + "}";
            }
            String message;
            if (chooseUseText == null) {
                String effectText = executingEffects.getText(source.getModes().getMode());
                message = "Pay " + costValueMessage + " to prevent (" + effectText.substring(0, effectText.length() - 1) + ")?";
            } else {
                message = chooseUseText;
            }
            message = CardUtil.replaceSourceName(message, sourceObject.getName());

            boolean result = true;
            boolean doEffect = true;]]></codefragment>
   </duplication>
   <duplication lines="14" tokens="133">
      <file begintoken="856334" column="33" endcolumn="47" endline="129" endtoken="856466"
            line="116"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\TargetCard.java"/>
      <file begintoken="856883" column="33" endcolumn="47" endline="204" endtoken="857015"
            line="191"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\TargetCard.java"/>
      <codefragment><![CDATA[                                }
                            }
                        }
                        break;
                    case COMMAND:
                        List<Card> possibleCards = game.getCommandersIds(player, CommanderCardType.ANY, false).stream()
                                .map(game::getCard)
                                .filter(Objects::nonNull)
                                .filter(card -> game.getState().getZone(card.getId()).equals(Zone.COMMAND))
                                .filter(card -> filter.match(card, sourceControllerId, source, game))
                                .collect(Collectors.toList());
                        for (Card card : possibleCards) {
                            if (sourceId == null || isNotTarget() || !game.replaceEvent(new TargetEvent(card, sourceId, sourceControllerId))) {
                                possibleTargets++;]]></codefragment>
   </duplication>
   <duplication lines="20" tokens="132">
      <file begintoken="23332" column="5" endcolumn="16" endline="66" endtoken="23463"
            line="47"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\BeginningOfDrawTriggeredAbility.java"/>
      <file begintoken="23991" column="5" endcolumn="16" endline="66" endtoken="24122"
            line="47"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\BeginningOfEndStepTriggeredAbility.java"/>
      <codefragment><![CDATA[    }

    @Override
    public boolean checkTrigger(GameEvent event, Game game) {
        switch (targetController) {
            case YOU:
                boolean yours = event.getPlayerId().equals(this.controllerId);
                if (yours && getTargets().isEmpty()) {
                    this.getEffects().setTargetPointer(new FixedTarget(event.getPlayerId()));
                }
                return yours;
            case OPPONENT:
                if (game.getPlayer(this.controllerId).hasOpponent(event.getPlayerId(), game)) {
                    if (getTargets().isEmpty()) {
                        this.getEffects().setTargetPointer(new FixedTarget(event.getPlayerId()));
                    }
                    return true;
                }
                break;
            case NOT_YOU:]]></codefragment>
   </duplication>
   <duplication lines="28" tokens="132">
      <file begintoken="187320" column="55" endcolumn="74" endline="106" endtoken="187451"
            line="79"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BecomesFaceDownCreatureAllEffect.java"/>
      <file begintoken="188188" column="53" endcolumn="70" endline="166" endtoken="188319"
            line="139"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BecomesFaceDownCreatureEffect.java"/>
      <codefragment><![CDATA[                        permanent.getManaCost().clear();
                        break;
                    case ColorChangingEffects_5:
                        permanent.getColor(game).setColor(new ObjectColor());
                        break;
                    case AbilityAddingRemovingEffects_6:
                        Card card = game.getCard(permanent.getId()); //
                        List<Ability> abilitiesToRemove = new ArrayList<>();
                        for (Ability ability : permanent.getAbilities()) {

                            // keep gained abilities from other sources, removes only own (card text)
                            if (card != null && !card.getAbilities().contains(ability)) {
                                continue;
                            }

                            // 701.33c
                            // If a card with morph is manifested, its controller may turn that card face up using
                            // either the procedure described in rule 702.36e to turn a face-down permanent with morph face up
                            // or the procedure described above to turn a manifested permanent face up.
                            //
                            // so keep all tune face up abilities and other face down compatible
                            if (ability.getWorksFaceDown()) {
                                ability.setRuleVisible(false);
                                continue;
                            }

                            if (!ability.getRuleVisible() && !ability.getEffects().isEmpty()) {
                                if (ability.getEffects().get(0) instanceof BecomesFaceDownCreatureAllEffect) {]]></codefragment>
   </duplication>
   <duplication lines="8" tokens="132">
      <file begintoken="804280" column="9" endcolumn="13" endline="286" endtoken="804411"
            line="279"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\players\PlayerImpl.java"/>
      <file begintoken="804920" column="9" endcolumn="13" endline="373" endtoken="805051"
            line="365"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\players\PlayerImpl.java"/>
      <codefragment><![CDATA[        this.castSourceIdWithAlternateMana.addAll(player.getCastSourceIdWithAlternateMana());
        for (Entry<UUID, ManaCosts<ManaCost>> entry : player.getCastSourceIdManaCosts().entrySet()) {
            this.castSourceIdManaCosts.put(entry.getKey(), (entry.getValue() == null ? null : entry.getValue().copy()));
        }
        for (Entry<UUID, Costs<Cost>> entry : player.getCastSourceIdCosts().entrySet()) {
            this.castSourceIdCosts.put(entry.getKey(), (entry.getValue() == null ? null : entry.getValue().copy()));
        }
        this.payManaMode = player.payManaMode;]]></codefragment>
   </duplication>
   <duplication lines="23" tokens="132">
      <file begintoken="849295" column="72" endcolumn="13" endline="184" endtoken="849426"
            line="162"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetPermanentOrPlayer.java"/>
      <file begintoken="852733" column="97" endcolumn="13" endline="183" endtoken="852864"
            line="161"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetSpellOrPermanent.java"/>
      <codefragment><![CDATA[            if (player != null && filter.getPlayerFilter().match(player, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }
        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getPermanentFilter(), sourceControllerId, game)) {
            if (filter.match(permanent, sourceControllerId, null, game) && filter.match(permanent, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }
        return false;
    }

    @Override
    public Set<UUID> possibleTargets(UUID sourceControllerId, Ability source, Game game) {
        Set<UUID> possibleTargets = new HashSet<>();
        MageObject targetSource = game.getObject(source);
        for (UUID playerId : game.getState().getPlayersInRange(sourceControllerId, game)) {]]></codefragment>
   </duplication>
   <duplication lines="36" tokens="131">
      <file begintoken="575849" column="5" endcolumn="14" endline="234" endtoken="575979"
            line="199"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Dungeon.java"/>
      <file begintoken="580487" column="5" endcolumn="14" endline="149" endtoken="580617"
            line="114"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Emblem.java"/>
      <file begintoken="754443" column="5" endcolumn="14" endline="149" endtoken="754573"
            line="114"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\stack\StackAbility.java"/>
      <codefragment><![CDATA[    }

    @Override
    public void setCopy(boolean isCopy, MageObject copyFrom) {
        this.copy = isCopy;
        this.copyFrom = (copyFrom != null ? copyFrom.copy() : null);
    }

    @Override
    public boolean isCopy() {
        return this.copy;
    }

    @Override
    public MageObject getCopyFrom() {
        return this.copyFrom;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public String getIdName() {
        return getName() + " [" + getId().toString().substring(0, 3) + ']';
    }

    @Override
    public String getLogName() {
        return GameLog.getColoredObjectIdName(this);
    }

    @Override
    public String getImageName() {
        return this.name;]]></codefragment>
   </duplication>
   <duplication lines="22" tokens="131">
      <file begintoken="835909" column="103" endcolumn="30" endline="175" endtoken="836039"
            line="154"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetAnyTarget.java"/>
      <file begintoken="843468" column="102" endcolumn="30" endline="168" endtoken="843598"
            line="149"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetCreatureOrPlayer.java"/>
      <codefragment><![CDATA[        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getPermanentFilter(), sourceControllerId, game)) {
            if (filter.match(permanent, sourceControllerId, null, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }

        return false;
    }

    @Override
    public Set<UUID> possibleTargets(UUID sourceControllerId, Ability source, Game game) {
        Set<UUID> possibleTargets = new HashSet<>();
        MageObject targetSource = game.getObject(source);

        for (UUID playerId : game.getState().getPlayersInRange(sourceControllerId, game)) {
            Player player = game.getPlayer(playerId);
            if (player != null
                    && player.canBeTargetedBy(targetSource, sourceControllerId, game)
                    && filter.match(player, sourceControllerId, source, game)) {]]></codefragment>
   </duplication>
   <duplication lines="17" tokens="129">
      <file begintoken="596047" column="80" endcolumn="5" endline="63" endtoken="596175"
            line="47"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AstralArenaPlane.java"/>
      <file begintoken="598300" column="79" endcolumn="5" endline="57" endtoken="598428"
            line="40"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\HedronFieldsOfAgadeemPlane.java"/>
      <file begintoken="600163" column="88" endcolumn="5" endline="55" endtoken="600291"
            line="38"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TheEonFogPlane.java"/>
      <codefragment><![CDATA[        Effect chaosEffect = new DamageAllEffect(2, new FilterCreaturePermanent());
        Target chaosTarget = null;

        List<Effect> chaosEffects = new ArrayList<Effect>();
        chaosEffects.add(chaosEffect);
        List<Target> chaosTargets = new ArrayList<Target>();
        chaosTargets.add(chaosTarget);

        ActivateIfConditionActivatedAbility chaosAbility = new ActivateIfConditionActivatedAbility(Zone.COMMAND, new RollPlanarDieEffect(chaosEffects, chaosTargets), new GenericManaCost(0), MainPhaseStackEmptyCondition.instance);
        chaosAbility.addWatcher(new PlanarRollWatcher());
        this.getAbilities().add(chaosAbility);
        chaosAbility.setMayActivate(TargetController.ANY);
        this.getAbilities().add(new SimpleStaticAbility(Zone.ALL, new PlanarDieRollCostIncreasingEffect(chaosAbility.getOriginalId())));
    }
}

class AstralArenaAttackRestrictionEffect extends RestrictionEffect {]]></codefragment>
   </duplication>
   <duplication lines="18" tokens="127">
      <file begintoken="50008" column="65" endcolumn="23" endline="53" endtoken="50134"
            line="36"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\EntersBattlefieldOrDiesSourceTriggeredAbility.java"/>
      <file begintoken="50208" column="67" endcolumn="23" endline="45" endtoken="50334"
            line="29"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\EntersBattlefieldOrLeavesSourceTriggeredAbility.java"/>
      <codefragment><![CDATA[        return new EntersBattlefieldOrDiesSourceTriggeredAbility(this);
    }

    @Override
    public boolean checkEventType(GameEvent event, Game game) {
        return event.getType() == GameEvent.EventType.ENTERS_THE_BATTLEFIELD
                || event.getType() == GameEvent.EventType.ZONE_CHANGE;
    }

    @Override
    public boolean checkTrigger(GameEvent event, Game game) {
        if (event.getType() == GameEvent.EventType.ENTERS_THE_BATTLEFIELD
                && event.getTargetId().equals(getSourceId())) {
            return true;
        }
        if (event.getType() == GameEvent.EventType.ZONE_CHANGE && event.getTargetId().equals(this.getSourceId())) {
            ZoneChangeEvent zEvent = (ZoneChangeEvent) event;
            if (zEvent.isDiesEvent()) {]]></codefragment>
   </duplication>
   <duplication lines="15" tokens="127">
      <file begintoken="301263" column="13" endcolumn="33" endline="100" endtoken="301389"
            line="86"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\ReturnFromGraveyardToBattlefieldTargetEffect.java"/>
      <file begintoken="328683" column="9" endcolumn="29" endline="63" endtoken="328809"
            line="49"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\TransformTargetEffect.java"/>
      <codefragment><![CDATA[            Target target = mode.getTargets().get(0);
            if (target.getMaxNumberOfTargets() == Integer.MAX_VALUE
                    && target.getMinNumberOfTargets() == 0) {
                sb.append("any number of ");
            } else {
                if (target.getMaxNumberOfTargets() != target.getNumberOfTargets()) {
                    sb.append("up to ");
                }
                sb.append(CardUtil.numberToText(target.getMaxNumberOfTargets())).append(' ');
            }
            String targetName = mode.getTargets().get(0).getTargetName();
            if (!targetName.contains("target ")) {
                sb.append("target ");
            }
            sb.append(targetName);]]></codefragment>
   </duplication>
   <duplication lines="18" tokens="127">
      <file begintoken="594582" column="62" endcolumn="5" endline="62" endtoken="594708"
            line="45"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AcademyAtTolariaWestPlane.java"/>
      <file begintoken="596049" column="82" endcolumn="5" endline="63" endtoken="596175"
            line="47"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AstralArenaPlane.java"/>
      <file begintoken="596852" column="133" endcolumn="5" endline="62" endtoken="596978"
            line="46"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\EdgeOfMalacolPlane.java"/>
      <file begintoken="598302" column="81" endcolumn="5" endline="57" endtoken="598428"
            line="40"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\HedronFieldsOfAgadeemPlane.java"/>
      <file begintoken="600165" column="90" endcolumn="5" endline="55" endtoken="600291"
            line="38"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TheEonFogPlane.java"/>
      <file begintoken="601312" column="138" endcolumn="5" endline="69" endtoken="601438"
            line="53"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TrailOfTheMageRingsPlane.java"/>
      <file begintoken="602605" column="129" endcolumn="5" endline="68" endtoken="602731"
            line="52"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\UndercityReachesPlane.java"/>
      <codefragment><![CDATA[        Effect chaosEffect = new DiscardHandControllerEffect();
        Target chaosTarget = null;

        List<Effect> chaosEffects = new ArrayList<Effect>();
        chaosEffects.add(chaosEffect);

        List<Target> chaosTargets = new ArrayList<Target>();
        chaosTargets.add(chaosTarget);

        ActivateIfConditionActivatedAbility chaosAbility = new ActivateIfConditionActivatedAbility(Zone.COMMAND, new RollPlanarDieEffect(chaosEffects, chaosTargets), new GenericManaCost(0), MainPhaseStackEmptyCondition.instance);
        chaosAbility.addWatcher(new PlanarRollWatcher());
        this.getAbilities().add(chaosAbility);
        chaosAbility.setMayActivate(TargetController.ANY);
        this.getAbilities().add(new SimpleStaticAbility(Zone.ALL, new PlanarDieRollCostIncreasingEffect(chaosAbility.getOriginalId())));
    }
}

class DrawCardsActivePlayerEffect extends OneShotEffect {]]></codefragment>
   </duplication>
   <duplication lines="20" tokens="126">
      <file begintoken="66401" column="9" endcolumn="10" endline="69" endtoken="66526"
            line="50"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\TapForManaAllTriggeredAbility.java"/>
      <file begintoken="66668" column="9" endcolumn="10" endline="63" endtoken="66793"
            line="44"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\TapForManaAllTriggeredManaAbility.java"/>
      <codefragment><![CDATA[        TappedForManaEvent manaEvent = ((TappedForManaEvent) event);
        Permanent permanent = manaEvent.getPermanent();
        if (permanent == null || !filter.match(permanent, getControllerId(), this, game)) {
            return false;
        }
        getEffects().setValue("mana", manaEvent.getMana());
        getEffects().setValue("tappedPermanent", permanent);
        switch (setTargetPointer) {
            case PERMANENT:
                getEffects().setTargetPointer(new FixedTarget(permanent.getId(), permanent.getZoneChangeCounter(game)));
                break;
            case PLAYER:
                getEffects().setTargetPointer(new FixedTarget(permanent.getControllerId()));
                break;
        }
        return true;
    }

    @Override
    public TapForManaAllTriggeredAbility copy() {]]></codefragment>
   </duplication>
   <duplication lines="16" tokens="126">
      <file begintoken="594582" column="62" endcolumn="1" endline="60" endtoken="594707"
            line="45"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AcademyAtTolariaWestPlane.java"/>
      <file begintoken="596049" column="82" endcolumn="1" endline="61" endtoken="596174"
            line="47"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AstralArenaPlane.java"/>
      <file begintoken="596852" column="133" endcolumn="1" endline="60" endtoken="596977"
            line="46"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\EdgeOfMalacolPlane.java"/>
      <file begintoken="598302" column="81" endcolumn="1" endline="55" endtoken="598427"
            line="40"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\HedronFieldsOfAgadeemPlane.java"/>
      <file begintoken="599973" column="83" endcolumn="1" endline="64" endtoken="600098"
            line="50"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TheDarkBaronyPlane.java"/>
      <file begintoken="600165" column="90" endcolumn="1" endline="53" endtoken="600290"
            line="38"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TheEonFogPlane.java"/>
      <file begintoken="601312" column="138" endcolumn="1" endline="67" endtoken="601437"
            line="53"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TrailOfTheMageRingsPlane.java"/>
      <file begintoken="601913" column="102" endcolumn="1" endline="61" endtoken="602038"
            line="47"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TrugaJunglePlane.java"/>
      <file begintoken="602605" column="129" endcolumn="1" endline="66" endtoken="602730"
            line="52"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\UndercityReachesPlane.java"/>
      <codefragment><![CDATA[        Effect chaosEffect = new DiscardHandControllerEffect();
        Target chaosTarget = null;

        List<Effect> chaosEffects = new ArrayList<Effect>();
        chaosEffects.add(chaosEffect);

        List<Target> chaosTargets = new ArrayList<Target>();
        chaosTargets.add(chaosTarget);

        ActivateIfConditionActivatedAbility chaosAbility = new ActivateIfConditionActivatedAbility(Zone.COMMAND, new RollPlanarDieEffect(chaosEffects, chaosTargets), new GenericManaCost(0), MainPhaseStackEmptyCondition.instance);
        chaosAbility.addWatcher(new PlanarRollWatcher());
        this.getAbilities().add(chaosAbility);
        chaosAbility.setMayActivate(TargetController.ANY);
        this.getAbilities().add(new SimpleStaticAbility(Zone.ALL, new PlanarDieRollCostIncreasingEffect(chaosAbility.getOriginalId())));
    }
}]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="125">
      <file begintoken="360724" column="9" endcolumn="43" endline="111" endtoken="360848"
            line="99"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\mana\DynamicManaEffect.java"/>
      <file begintoken="360941" column="9" endcolumn="43" endline="144" endtoken="361065"
            line="132"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\mana\DynamicManaEffect.java"/>
      <codefragment><![CDATA[        if (baseMana.getBlack() > 0) {
            computedMana.setBlack(count);
        } else if (baseMana.getBlue() > 0) {
            computedMana.setBlue(count);
        } else if (baseMana.getGreen() > 0) {
            computedMana.setGreen(count);
        } else if (baseMana.getRed() > 0) {
            computedMana.setRed(count);
        } else if (baseMana.getWhite() > 0) {
            computedMana.setWhite(count);
        } else if (baseMana.getColorless() > 0) {
            computedMana.setColorless(count);
        } else if (baseMana.getAny() > 0) {]]></codefragment>
   </duplication>
   <duplication lines="17" tokens="125">
      <file begintoken="595144" column="58" endcolumn="5" endline="75" endtoken="595268"
            line="59"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AgyremPlane.java"/>
      <file begintoken="597934" column="51" endcolumn="5" endline="59" endtoken="598058"
            line="43"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\FieldsOfSummerPlane.java"/>
      <file begintoken="599175" column="66" endcolumn="5" endline="67" endtoken="599299"
            line="50"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\PanopticonPlane.java"/>
      <file begintoken="599549" column="134" endcolumn="5" endline="63" endtoken="599673"
            line="46"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TazeemPlane.java"/>
      <file begintoken="602108" column="124" endcolumn="5" endline="57" endtoken="602232"
            line="41"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TurriIslandPlane.java"/>
      <codefragment><![CDATA[        Effect chaosEffect = new AgyremRestrictionEffect();
        Target chaosTarget = null;

        List<Effect> chaosEffects = new ArrayList<>();
        chaosEffects.add(chaosEffect);
        List<Target> chaosTargets = new ArrayList<>();
        chaosTargets.add(chaosTarget);

        ActivateIfConditionActivatedAbility chaosAbility = new ActivateIfConditionActivatedAbility(Zone.COMMAND, new RollPlanarDieEffect(chaosEffects, chaosTargets), new GenericManaCost(0), MainPhaseStackEmptyCondition.instance);
        chaosAbility.addWatcher(new PlanarRollWatcher());
        this.getAbilities().add(chaosAbility);
        chaosAbility.setMayActivate(TargetController.ANY);
        this.getAbilities().add(new SimpleStaticAbility(Zone.ALL, new PlanarDieRollCostIncreasingEffect(chaosAbility.getOriginalId())));
    }
}

class AgyremEffect extends OneShotEffect {]]></codefragment>
   </duplication>
   <duplication lines="22" tokens="124">
      <file begintoken="118792" column="34" endcolumn="18" endline="94" endtoken="118915"
            line="73"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalContinuousEffect.java"/>
      <file begintoken="122770" column="16" endcolumn="18" endline="74" endtoken="122893"
            line="53"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalReplacementEffect.java"/>
      <codefragment><![CDATA[        return this.discarded || effect.isDiscarded() || (otherwiseEffect != null && otherwiseEffect.isDiscarded());
    }

    @Override
    public void init(Ability source, Game game) {
        super.init(source, game);
        if (baseCondition instanceof LockedInCondition) {
            condition = new FixedCondition(((LockedInCondition) baseCondition).getBaseCondition().apply(game, source));
        } else {
            condition = baseCondition;
        }
        effect.setTargetPointer(this.targetPointer);
        effect.init(source, game);
        if (otherwiseEffect != null) {
            otherwiseEffect.setTargetPointer(this.targetPointer);
            otherwiseEffect.init(source, game);
        }
        initDone = true;
    }

    @Override
    public boolean apply(Layer layer, SubLayer sublayer, Ability source, Game game) {]]></codefragment>
   </duplication>
   <duplication lines="24" tokens="124">
      <file begintoken="163671" column="94" endcolumn="22" endline="50" endtoken="163794"
            line="27"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\combat\CantAttackIfDefenderControlsPermanent.java"/>
      <file begintoken="164184" column="104" endcolumn="22" endline="50" endtoken="164307"
            line="27"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\combat\CantAttackUnlessDefenderControllsPermanent.java"/>
      <codefragment><![CDATA[    public CantAttackIfDefenderControlsPermanent(final CantAttackIfDefenderControlsPermanent effect) {
        super(effect);
        this.filter = effect.filter;
    }

    @Override
    public boolean applies(Permanent permanent, Ability source, Game game) {
        return permanent.getId().equals(source.getSourceId());
    }

    @Override
    public boolean canAttack(Permanent attacker, UUID defenderId, Ability source, Game game, boolean canUseChooseDialogs) {
        if (defenderId == null) {
            return true;
        }

        UUID defendingPlayerId;
        Player player = game.getPlayer(defenderId);
        if (player == null) {
            Permanent permanent = game.getPermanent(defenderId);
            if (permanent != null) {
                defendingPlayerId = permanent.getControllerId();
            } else {
                return true;]]></codefragment>
   </duplication>
   <duplication lines="26" tokens="124">
      <file begintoken="186601" column="13" endcolumn="1" endline="82" endtoken="186724"
            line="57"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BecomesCreatureTypeTargetEffect.java"/>
      <file begintoken="188712" column="13" endcolumn="1" endline="82" endtoken="188835"
            line="56"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BecomesSubtypeAllEffect.java"/>
      <codefragment><![CDATA[            if (permanent == null) {
                continue;
            }
            flag = true;
            if (loseOther) {
                permanent.removeAllCreatureTypes(game);
            }
            for (SubType subtype : subtypes) {
                permanent.addSubType(game, subtype);
            }
        }
        if (!flag && duration == Duration.Custom) {
            discard();
        }
        return true;
    }

    private String setText() {
        StringBuilder sb = new StringBuilder();
        sb.append("Target creature becomes that type");
        if (!duration.toString().isEmpty() && duration != Duration.EndOfGame) {
            sb.append(' ').append(duration.toString());
        }
        return sb.toString();
    }
}]]></codefragment>
   </duplication>
   <duplication lines="29" tokens="124">
      <file begintoken="608269" column="31" endcolumn="50" endline="50" endtoken="608392"
            line="22"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\draft\RichManBoosterDraft.java"/>
      <file begintoken="608744" column="35" endcolumn="50" endline="48" endtoken="608867"
            line="20"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\draft\RichManCubeBoosterDraft.java"/>
      <codefragment><![CDATA[    public RichManBoosterDraft(DraftOptions options, List<ExpansionSet> sets) {
        super(options, sets);
    }

    @Override
    public void start() {
        cardNum = 1;
        boosterNum = 1;
        while (!isAbort() && cardNum <= 36) {
            openBooster();
            cardNum = 1;
            fireUpdatePlayersEvent();
            while (!isAbort() && pickCards()) {
                // new booster each time, so order is irrelevant
                passBoosterToLeft();
                fireUpdatePlayersEvent();
            }
            boosterNum++;
        }
        this.fireEndDraftEvent();
    }

    @Override
    protected void passBoosterToLeft() {
        synchronized (players) {
            UUID startId = table.get(0);
            UUID currentId = startId;
            UUID nextId = table.getNext();
            DraftPlayer next = players.get(nextId);]]></codefragment>
   </duplication>
   <duplication lines="14" tokens="122">
      <file begintoken="595821" column="64" endcolumn="1" endline="61" endtoken="595942"
            line="48"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AkoumPlane.java"/>
      <file begintoken="598701" column="47" endcolumn="1" endline="54" endtoken="598822"
            line="40"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\LetheLakePlane.java"/>
      <file begintoken="601091" column="62" endcolumn="1" endline="79" endtoken="601212"
            line="66"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TheZephyrMazePlane.java"/>
      <codefragment><![CDATA[        Target chaosTarget = new TargetCreaturePermanent(filter);

        List<Effect> chaosEffects = new ArrayList<Effect>();
        chaosEffects.add(chaosEffect);
        List<Target> chaosTargets = new ArrayList<Target>();
        chaosTargets.add(chaosTarget);

        ActivateIfConditionActivatedAbility chaosAbility = new ActivateIfConditionActivatedAbility(Zone.COMMAND, new RollPlanarDieEffect(chaosEffects, chaosTargets), new GenericManaCost(0), MainPhaseStackEmptyCondition.instance);
        chaosAbility.addWatcher(new PlanarRollWatcher());
        this.getAbilities().add(chaosAbility);
        chaosAbility.setMayActivate(TargetController.ANY);
        this.getAbilities().add(new SimpleStaticAbility(Zone.ALL, new PlanarDieRollCostIncreasingEffect(chaosAbility.getOriginalId())));
    }
}]]></codefragment>
   </duplication>
   <duplication lines="14" tokens="122">
      <file begintoken="597353" column="105" endcolumn="1" endline="64" endtoken="597474"
            line="51"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\FeedingGroundsPlane.java"/>
      <file begintoken="598959" column="80" endcolumn="1" endline="67" endtoken="599080"
            line="54"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\NayaPlane.java"/>
      <codefragment><![CDATA[        Target chaosTarget = new TargetCreaturePermanent(1, 1, StaticFilters.FILTER_PERMANENT_A_CREATURE, false);

        List<Effect> chaosEffects = new ArrayList<>();
        chaosEffects.add(chaosEffect);
        List<Target> chaosTargets = new ArrayList<>();
        chaosTargets.add(chaosTarget);

        ActivateIfConditionActivatedAbility chaosAbility = new ActivateIfConditionActivatedAbility(Zone.COMMAND, new RollPlanarDieEffect(chaosEffects, chaosTargets), new GenericManaCost(0), MainPhaseStackEmptyCondition.instance);
        chaosAbility.addWatcher(new PlanarRollWatcher());
        this.getAbilities().add(chaosAbility);
        chaosAbility.setMayActivate(TargetController.ANY);
        this.getAbilities().add(new SimpleStaticAbility(Zone.ALL, new PlanarDieRollCostIncreasingEffect(chaosAbility.getOriginalId())));
    }
}]]></codefragment>
   </duplication>
   <duplication lines="17" tokens="122">
      <file begintoken="658304" column="60" endcolumn="9" endline="98" endtoken="658425"
            line="82"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\mulligan\LondonMulligan.java"/>
      <file begintoken="659384" column="46" endcolumn="9" endline="54" endtoken="659505"
            line="38"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\mulligan\ParisMulligan.java"/>
      <codefragment><![CDATA[        int numCards = startingHandSizes.get(player.getId());
        player.getLibrary().addAll(player.getHand().getCards(game), game);
        player.getHand().clear();
        player.shuffleLibrary(null, game);
        int deduction = 1;
        if (freeMulligans > 0) {
            if (usedFreeMulligans.containsKey(player.getId())) {
                int used = usedFreeMulligans.get(player.getId());
                if (used < freeMulligans) {
                    deduction = 0;
                    usedFreeMulligans.put(player.getId(), used + 1);
                }
            } else {
                deduction = 0;
                usedFreeMulligans.put(player.getId(), 1);
            }
        }]]></codefragment>
   </duplication>
   <duplication lines="23" tokens="121">
      <file begintoken="119565" column="9" endcolumn="18" endline="66" endtoken="119685"
            line="44"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalContinuousRuleModifyingEffect.java"/>
      <file begintoken="123418" column="9" endcolumn="18" endline="77" endtoken="123538"
            line="55"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalRequirementEffect.java"/>
      <file begintoken="124145" column="9" endcolumn="18" endline="76" endtoken="124265"
            line="54"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalRestrictionEffect.java"/>
      <codefragment><![CDATA[        this.baseCondition = effect.baseCondition;
        this.initDone = effect.initDone;
    }

    @Override
    public void init(Ability source, Game game) {
        super.init(source, game);
        if (baseCondition instanceof LockedInCondition) {
            condition = new FixedCondition(((LockedInCondition) baseCondition).getBaseCondition().apply(game, source));
        } else {
            condition = baseCondition;
        }
        effect.setTargetPointer(this.targetPointer);
        effect.init(source, game);
        if (otherwiseEffect != null) {
            otherwiseEffect.setTargetPointer(this.targetPointer);
            otherwiseEffect.init(source, game);
        }
        initDone = true;
    }

    @Override
    public boolean isDiscarded() {]]></codefragment>
   </duplication>
   <duplication lines="36" tokens="121">
      <file begintoken="120985" column="5" endcolumn="5" endline="120" endtoken="121105"
            line="85"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalInterveningIfTriggeredAbility.java"/>
      <file begintoken="124948" column="5" endcolumn="5" endline="109" endtoken="125068"
            line="74"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalTriggeredAbility.java"/>
      <codefragment><![CDATA[    }

    @Override
    public Effects getEffects() {
        return ability.getEffects();
    }

    @Override
    public void addEffect(Effect effect) {
        ability.addEffect(effect);
    }

    @Override
    public Modes getModes() {
        return ability.getModes();
    }

    @Override
    public List<Watcher> getWatchers() {
        return ability.getWatchers();
    }

    @Override
    public void addWatcher(Watcher watcher) {
        ability.addWatcher(watcher);
    }

    @Override
    public Effects getEffects(Game game, EffectType effectType) {
        return ability.getEffects(game, effectType);
    }

    @Override
    public boolean isOptional() {
        return ability.isOptional();
    }]]></codefragment>
   </duplication>
   <duplication lines="19" tokens="121">
      <file begintoken="291952" column="67" endcolumn="43" endline="64" endtoken="292072"
            line="46"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\PreventNextDamageFromChosenSourceToTargetEffect.java"/>
      <file begintoken="292315" column="64" endcolumn="43" endline="63" endtoken="292435"
            line="45"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\PreventNextDamageFromChosenSourceToYouEffect.java"/>
      <codefragment><![CDATA[        return new PreventNextDamageFromChosenSourceToTargetEffect(this);
    }

    @Override
    public void init(Ability source, Game game) {
        this.targetSource.choose(Outcome.PreventDamage, source.getControllerId(), source.getSourceId(), source, game);
    }

    @Override
    public boolean replaceEvent(GameEvent event, Ability source, Game game) {
        preventDamageAction(event, source, game);
        this.used = true;
        return false;
    }

    @Override
    public boolean applies(GameEvent event, Ability source, Game game) {
        if (!this.used && super.applies(event, source, game)) {
            if (event.getTargetId().equals(targetPointer.getFirst(game, source)) && event.getSourceId().equals(targetSource.getFirstTarget())) {]]></codefragment>
   </duplication>
   <duplication lines="14" tokens="121">
      <file begintoken="483978" column="17" endcolumn="1" endline="50" endtoken="484098"
            line="37"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\decks\importer\DecDeckImporter.java"/>
      <file begintoken="486513" column="17" endcolumn="1" endline="68" endtoken="486633"
            line="56"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\decks\importer\MWSDeckImporter.java"/>
      <codefragment><![CDATA[                for (int i = 0; i < num; i++) {
                    if (!sideboard) {
                        deckList.getCards().add(new DeckCardInfo(cardInfo.getName(), cardInfo.getCardNumber(), cardInfo.getSetCode()));
                    } else {
                        deckList.getSideboard().add(new DeckCardInfo(cardInfo.getName(), cardInfo.getCardNumber(), cardInfo.getSetCode()));
                    }
                }
            }
        } catch (NumberFormatException nfe) {
            sbMessage.append("Invalid number: ").append(lineNum).append(" at line ").append(lineCount).append('\n');
        }
    }

}]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="121">
      <file begintoken="594587" column="9" endcolumn="1" endline="60" endtoken="594707"
            line="48"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AcademyAtTolariaWestPlane.java"/>
      <file begintoken="595822" column="9" endcolumn="1" endline="61" endtoken="595942"
            line="50"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AkoumPlane.java"/>
      <file begintoken="596054" column="9" endcolumn="1" endline="61" endtoken="596174"
            line="50"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AstralArenaPlane.java"/>
      <file begintoken="596857" column="9" endcolumn="1" endline="60" endtoken="596977"
            line="49"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\EdgeOfMalacolPlane.java"/>
      <file begintoken="598307" column="9" endcolumn="1" endline="55" endtoken="598427"
            line="43"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\HedronFieldsOfAgadeemPlane.java"/>
      <file begintoken="598702" column="9" endcolumn="1" endline="54" endtoken="598822"
            line="42"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\LetheLakePlane.java"/>
      <file begintoken="599978" column="9" endcolumn="1" endline="64" endtoken="600098"
            line="53"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TheDarkBaronyPlane.java"/>
      <file begintoken="600170" column="9" endcolumn="1" endline="53" endtoken="600290"
            line="41"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TheEonFogPlane.java"/>
      <file begintoken="601092" column="9" endcolumn="1" endline="79" endtoken="601212"
            line="68"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TheZephyrMazePlane.java"/>
      <file begintoken="601317" column="9" endcolumn="1" endline="67" endtoken="601437"
            line="56"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TrailOfTheMageRingsPlane.java"/>
      <file begintoken="601918" column="9" endcolumn="1" endline="61" endtoken="602038"
            line="50"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TrugaJunglePlane.java"/>
      <file begintoken="602610" column="9" endcolumn="1" endline="66" endtoken="602730"
            line="55"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\UndercityReachesPlane.java"/>
      <codefragment><![CDATA[        List<Effect> chaosEffects = new ArrayList<Effect>();
        chaosEffects.add(chaosEffect);

        List<Target> chaosTargets = new ArrayList<Target>();
        chaosTargets.add(chaosTarget);

        ActivateIfConditionActivatedAbility chaosAbility = new ActivateIfConditionActivatedAbility(Zone.COMMAND, new RollPlanarDieEffect(chaosEffects, chaosTargets), new GenericManaCost(0), MainPhaseStackEmptyCondition.instance);
        chaosAbility.addWatcher(new PlanarRollWatcher());
        this.getAbilities().add(chaosAbility);
        chaosAbility.setMayActivate(TargetController.ANY);
        this.getAbilities().add(new SimpleStaticAbility(Zone.ALL, new PlanarDieRollCostIncreasingEffect(chaosAbility.getOriginalId())));
    }
}]]></codefragment>
   </duplication>
   <duplication lines="22" tokens="120">
      <file begintoken="393515" column="5" endcolumn="20" endline="89" endtoken="393634"
            line="68"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\EnlistAbility.java"/>
      <file begintoken="396888" column="5" endcolumn="20" endline="109" endtoken="397007"
            line="88"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\ExertAbility.java"/>
      <codefragment><![CDATA[    }

    @Override
    public boolean checksEventType(GameEvent event, Game game) {
        return event.getType() == GameEvent.EventType.ATTACKER_DECLARED;
    }

    @Override
    public boolean applies(GameEvent event, Ability source, Game game) {
        return event.getSourceId().equals(source.getSourceId());
    }

    @Override
    public boolean apply(Game game, Ability source) {
        return false;
    }

    @Override
    public boolean replaceEvent(GameEvent event, Ability source, Game game) {
        Permanent creature = game.getPermanent(event.getSourceId());
        Player controller = game.getPlayer(source.getControllerId());
        if (creature == null || controller == null]]></codefragment>
   </duplication>
   <duplication lines="14" tokens="120">
      <file begintoken="595149" column="9" endcolumn="5" endline="75" endtoken="595268"
            line="62"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AgyremPlane.java"/>
      <file begintoken="597356" column="9" endcolumn="5" endline="66" endtoken="597475"
            line="53"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\FeedingGroundsPlane.java"/>
      <file begintoken="597939" column="9" endcolumn="5" endline="59" endtoken="598058"
            line="46"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\FieldsOfSummerPlane.java"/>
      <file begintoken="599180" column="9" endcolumn="5" endline="67" endtoken="599299"
            line="53"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\PanopticonPlane.java"/>
      <file begintoken="599554" column="9" endcolumn="5" endline="63" endtoken="599673"
            line="49"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TazeemPlane.java"/>
      <file begintoken="602113" column="9" endcolumn="5" endline="57" endtoken="602232"
            line="44"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TurriIslandPlane.java"/>
      <codefragment><![CDATA[        List<Effect> chaosEffects = new ArrayList<>();
        chaosEffects.add(chaosEffect);
        List<Target> chaosTargets = new ArrayList<>();
        chaosTargets.add(chaosTarget);

        ActivateIfConditionActivatedAbility chaosAbility = new ActivateIfConditionActivatedAbility(Zone.COMMAND, new RollPlanarDieEffect(chaosEffects, chaosTargets), new GenericManaCost(0), MainPhaseStackEmptyCondition.instance);
        chaosAbility.addWatcher(new PlanarRollWatcher());
        this.getAbilities().add(chaosAbility);
        chaosAbility.setMayActivate(TargetController.ANY);
        this.getAbilities().add(new SimpleStaticAbility(Zone.ALL, new PlanarDieRollCostIncreasingEffect(chaosAbility.getOriginalId())));
    }
}

class AgyremEffect extends OneShotEffect {]]></codefragment>
   </duplication>
   <duplication lines="14" tokens="120">
      <file begintoken="837332" column="17" endcolumn="18" endline="55" endtoken="837451"
            line="42"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetCardInCommandZone.java"/>
      <file begintoken="839334" column="17" endcolumn="18" endline="62" endtoken="839453"
            line="49"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetCardInHand.java"/>
      <codefragment><![CDATA[                && game.getState().getPlayersInRange(getTargetController() == null ? playerId : getTargetController(), game).contains(game.getOwnerId(id))
                && filter.match(card, game);
    }

    @Override
    public boolean canTarget(UUID id, Ability source, Game game) {
        return this.canTarget(source.getControllerId(), id, source, game);
    }

    @Override
    public Set<UUID> possibleTargets(UUID sourceControllerId, Ability source, Game game) {
        Set<UUID> possibleTargets = new HashSet<>();
        Player player = game.getPlayer(sourceControllerId);
        if (player == null) {]]></codefragment>
   </duplication>
   <duplication lines="19" tokens="120">
      <file begintoken="849640" column="45" endcolumn="20" endline="222" endtoken="849759"
            line="204"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetPermanentOrPlayer.java"/>
      <file begintoken="853093" column="50" endcolumn="20" endline="224" endtoken="853212"
            line="206"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetSpellOrPermanent.java"/>
      <codefragment><![CDATA[                possibleTargets.add(playerId);
            }
        }
        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getPermanentFilter(), sourceControllerId, game)) {
            if (filter.match(permanent, sourceControllerId, null, game)) {
                possibleTargets.add(permanent.getId());
            }
        }
        return possibleTargets;
    }

    @Override
    public String getTargetedName(Game game) {
        StringBuilder sb = new StringBuilder();
        for (UUID targetId : getTargets()) {
            Permanent permanent = game.getPermanent(targetId);
            if (permanent != null) {
                sb.append(permanent.getLogName()).append(' ');
            } else {]]></codefragment>
   </duplication>
   <duplication lines="12" tokens="119">
      <file begintoken="595149" column="9" endcolumn="1" endline="73" endtoken="595267"
            line="62"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\AgyremPlane.java"/>
      <file begintoken="597939" column="9" endcolumn="1" endline="57" endtoken="598057"
            line="46"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\FieldsOfSummerPlane.java"/>
      <file begintoken="598962" column="9" endcolumn="1" endline="67" endtoken="599080"
            line="56"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\NayaPlane.java"/>
      <file begintoken="599180" column="9" endcolumn="1" endline="65" endtoken="599298"
            line="53"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\PanopticonPlane.java"/>
      <file begintoken="599554" column="9" endcolumn="1" endline="61" endtoken="599672"
            line="49"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TazeemPlane.java"/>
      <file begintoken="602113" column="9" endcolumn="1" endline="55" endtoken="602231"
            line="44"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\planes\TurriIslandPlane.java"/>
      <codefragment><![CDATA[        List<Effect> chaosEffects = new ArrayList<>();
        chaosEffects.add(chaosEffect);
        List<Target> chaosTargets = new ArrayList<>();
        chaosTargets.add(chaosTarget);

        ActivateIfConditionActivatedAbility chaosAbility = new ActivateIfConditionActivatedAbility(Zone.COMMAND, new RollPlanarDieEffect(chaosEffects, chaosTargets), new GenericManaCost(0), MainPhaseStackEmptyCondition.instance);
        chaosAbility.addWatcher(new PlanarRollWatcher());
        this.getAbilities().add(chaosAbility);
        chaosAbility.setMayActivate(TargetController.ANY);
        this.getAbilities().add(new SimpleStaticAbility(Zone.ALL, new PlanarDieRollCostIncreasingEffect(chaosAbility.getOriginalId())));
    }
}]]></codefragment>
   </duplication>
   <duplication lines="16" tokens="117">
      <file begintoken="444740" column="72" endcolumn="21" endline="129" endtoken="444856"
            line="114"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\mana\AnyColorLandsProduceManaAbility.java"/>
      <file begintoken="445605" column="66" endcolumn="21" endline="103" endtoken="445721"
            line="88"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\mana\AnyColorPermanentTypesManaAbility.java"/>
      <codefragment><![CDATA[        Choice choice = ManaType.getChoiceOfManaTypes(types, onlyColors);
        if (choice.getChoices().size() == 1) {
            choice.setChoice(choice.getChoices().iterator().next());
        } else {
            Player player = game.getPlayer(source.getControllerId());
            if (player == null || !player.choose(outcome, choice, game)) {
                return null;
            }
        }

        ManaType chosenType = ManaType.findByName(choice.getChoice());
        return chosenType == null ? null : new Mana(chosenType);
    }

    private Set<ManaType> getManaTypes(Game game, Ability source) {
        Set<ManaType> types = new HashSet<>(6);]]></codefragment>
   </duplication>
   <duplication lines="28" tokens="117">
      <file begintoken="835612" column="96" endcolumn="120" endline="111" endtoken="835728"
            line="84"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetAnyTarget.java"/>
      <file begintoken="843171" column="96" endcolumn="120" endline="110" endtoken="843287"
            line="84"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetCreatureOrPlayer.java"/>
      <file begintoken="849023" column="24" endcolumn="120" endline="129" endtoken="849139"
            line="102"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetPermanentOrPlayer.java"/>
      <codefragment><![CDATA[                return player.canBeTargetedBy(targetSource, source.getControllerId(), game) && filter.match(player, game);
            }
        }

        if (permanent != null) {
            return filter.match(permanent, game);
        }
        return filter.match(player, game);
    }

    /**
     * Checks if there are enough {@link Permanent} or {@link Player} that can
     * be chosen. Should only be used for Ability targets since this checks for
     * protection, shroud etc.
     *
     * @param sourceControllerId - controller of the target event source
     * @param source
     * @param game
     * @return - true if enough valid {@link Permanent} or {@link Player} exist
     */
    @Override
    public boolean canChoose(UUID sourceControllerId, Ability source, Game game) {
        int count = 0;

        MageObject targetSource = game.getObject(source);
        for (UUID playerId : game.getState().getPlayersInRange(sourceControllerId, game)) {
            Player player = game.getPlayer(playerId);
            if (player != null && player.canBeTargetedBy(targetSource, sourceControllerId, game) && filter.match(player, game)) {]]></codefragment>
   </duplication>
   <duplication lines="20" tokens="116">
      <file begintoken="39059" column="5" endcolumn="25" endline="55" endtoken="39174"
            line="36"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\delayed\AtTheBeginOfNextCleanupDelayedTriggeredAbility.java"/>
      <file begintoken="39666" column="5" endcolumn="25" endline="55" endtoken="39781"
            line="37"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\delayed\AtTheBeginOfNextUpkeepDelayedTriggeredAbility.java"/>
      <codefragment><![CDATA[    }

    @Override
    public boolean checkTrigger(GameEvent event, Game game) {
        return true;
    }

    @Override
    public String getRule() {
        StringBuilder sb = new StringBuilder();
        String text = modes.getText();
        if (!text.isEmpty()) {
            sb.append(Character.toUpperCase(text.charAt(0)));
            if (text.endsWith(".")) {
                sb.append(text.substring(1, text.length()-1));
            } else {
                sb.append(text.substring(1));
            }
        }
        return sb.append(" at the beginning of the next cleanup step.").toString();]]></codefragment>
   </duplication>
   <duplication lines="32" tokens="115">
      <file begintoken="849139" column="120" endcolumn="13" endline="160" endtoken="849253"
            line="129"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetPermanentOrPlayer.java"/>
      <file begintoken="852567" column="42" endcolumn="13" endline="158" endtoken="852681"
            line="127"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetSpellOrPermanent.java"/>
      <codefragment><![CDATA[            if (player != null && player.canBeTargetedBy(targetSource, sourceControllerId, game) && filter.match(player, sourceControllerId, source, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }
        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getPermanentFilter(), sourceControllerId, game)) {
            if (permanent.canBeTargetedBy(targetSource, sourceControllerId, game) && filter.match(permanent, sourceControllerId, source, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * Checks if there are enough {@link mage.game.permanent.Permanent} or
     * {@link mage.players.Player} that can be selected. Should not be used for
     * Ability targets since this does not check for protection, shroud etc.
     *
     * @param sourceControllerId - controller of the select event
     * @param game
     * @return - true if enough valid {@link mage.game.permanent.Permanent} or
     * {@link mage.players.Player} exist
     */
    @Override
    public boolean canChoose(UUID sourceControllerId, Game game) {
        int count = 0;
        for (UUID playerId : game.getState().getPlayersInRange(sourceControllerId, game)) {]]></codefragment>
   </duplication>
   <duplication lines="20" tokens="114">
      <file begintoken="494814" column="5" endcolumn="36" endline="82" endtoken="494927"
            line="63"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\ModalDoubleFacesCard.java"/>
      <file begintoken="509166" column="5" endcolumn="36" endline="78" endtoken="509279"
            line="59"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\cards\SplitCard.java"/>
      <codefragment><![CDATA[    }

    @Override
    public void assignNewId() {
        super.assignNewId();
        leftHalfCard.assignNewId();
        rightHalfCard.assignNewId();
    }

    @Override
    public void setCopy(boolean isCopy, MageObject copiedFrom) {
        super.setCopy(isCopy, copiedFrom);
        leftHalfCard.setCopy(isCopy, copiedFrom);
        rightHalfCard.setCopy(isCopy, copiedFrom);
    }

    @Override
    public boolean moveToZone(Zone toZone, Ability source, Game game, boolean flag, List<UUID> appliedEffects) {
        if (super.moveToZone(toZone, source, game, flag, appliedEffects)) {
            game.getState().setZone(leftHalfCard.getId(), toZone);]]></codefragment>
   </duplication>
   <duplication lines="20" tokens="112">
      <file begintoken="51900" column="5" endcolumn="10" endline="68" endtoken="52011"
            line="49"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\ExploitCreatureTriggeredAbility.java"/>
      <file begintoken="54050" column="5" endcolumn="10" endline="69" endtoken="54161"
            line="50"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\common\GodEternalDiesTriggeredAbility.java"/>
      <codefragment><![CDATA[    }

    @Override
    public boolean isInUseableZone(Game game, MageObject source, GameEvent event) {
        Permanent sourcePermanent = null;
        if (game.getState().getZone(getSourceId()) == Zone.BATTLEFIELD) {
            sourcePermanent = game.getPermanent(getSourceId());
        } else {
            if (game.getShortLivingLKI(getSourceId(), Zone.BATTLEFIELD)) {
                sourcePermanent = (Permanent) game.getLastKnownInformation(getSourceId(), Zone.BATTLEFIELD);
            }
        }
        if (sourcePermanent == null) {
            return false;
        }
        return hasSourceObjectAbility(game, sourcePermanent, event);
    }

    @Override
    public boolean checkTrigger(GameEvent event, Game game) {]]></codefragment>
   </duplication>
   <duplication lines="31" tokens="111">
      <file begintoken="531601" column="35" endcolumn="17" endline="106" endtoken="531711"
            line="76"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\designations\Designation.java"/>
      <file begintoken="575848" column="51" endcolumn="17" endline="228" endtoken="575958"
            line="198"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Dungeon.java"/>
      <file begintoken="580486" column="51" endcolumn="17" endline="143" endtoken="580596"
            line="113"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Emblem.java"/>
      <codefragment><![CDATA[        this.id = UUID.randomUUID();
    }

    @Override
    public void setCopy(boolean isCopy, MageObject copyFrom) {
        this.copy = isCopy;
        this.copyFrom = (copyFrom != null ? copyFrom.copy() : null);
    }

    @Override
    public boolean isCopy() {
        return this.copy;
    }

    @Override
    public MageObject getCopyFrom() {
        return this.copyFrom;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public String getIdName() {
        return getName() + " [" + getId().toString().substring(0, 3) + ']';
    }

    @Override
    public String getImageName() {]]></codefragment>
   </duplication>
   <duplication lines="34" tokens="111">
      <file begintoken="835728" column="120" endcolumn="13" endline="144" endtoken="835838"
            line="111"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetAnyTarget.java"/>
      <file begintoken="852571" column="70" endcolumn="13" endline="158" endtoken="852681"
            line="127"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetSpellOrPermanent.java"/>
      <codefragment><![CDATA[            if (player != null && player.canBeTargetedBy(targetSource, sourceControllerId, game) && filter.match(player, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }

        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getPermanentFilter(), sourceControllerId, game)) {
            if (permanent.canBeTargetedBy(targetSource, sourceControllerId, game) && filter.match(permanent, sourceControllerId, source, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }

        return false;
    }

    /**
     * Checks if there are enough {@link Permanent} or {@link Player} that can
     * be selected. Should not be used for Ability targets since this does not
     * check for protection, shroud etc.
     *
     * @param sourceControllerId - controller of the select event
     * @param game
     * @return - true if enough valid {@link Permanent} or {@link Player} exist
     */
    @Override
    public boolean canChoose(UUID sourceControllerId, Game game) {
        int count = 0;

        for (UUID playerId : game.getState().getPlayersInRange(sourceControllerId, game)) {]]></codefragment>
   </duplication>
   <duplication lines="30" tokens="110">
      <file begintoken="531602" column="5" endcolumn="17" endline="106" endtoken="531711"
            line="77"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\designations\Designation.java"/>
      <file begintoken="754443" column="5" endcolumn="17" endline="143" endtoken="754552"
            line="114"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\stack\StackAbility.java"/>
      <codefragment><![CDATA[    }

    @Override
    public void setCopy(boolean isCopy, MageObject copyFrom) {
        this.copy = isCopy;
        this.copyFrom = (copyFrom != null ? copyFrom.copy() : null);
    }

    @Override
    public boolean isCopy() {
        return this.copy;
    }

    @Override
    public MageObject getCopyFrom() {
        return this.copyFrom;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public String getIdName() {
        return getName() + " [" + getId().toString().substring(0, 3) + ']';
    }

    @Override
    public String getImageName() {]]></codefragment>
   </duplication>
   <duplication lines="15" tokens="109">
      <file begintoken="227854" column="70" endcolumn="51" endline="51" endtoken="227962"
            line="37"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\counter\AddCountersAttachedEffect.java"/>
      <file begintoken="232260" column="76" endcolumn="51" endline="51" endtoken="232368"
            line="37"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\counter\RemoveCountersAttachedEffect.java"/>
      <codefragment><![CDATA[    public AddCountersAttachedEffect(final AddCountersAttachedEffect effect) {
        super(effect);
        if (effect.counter != null) {
            this.counter = effect.counter.copy();
        }
        this.amount = effect.amount;
    }

    @Override
    public boolean apply(Game game, Ability source) {
        Permanent permanent = game.getPermanent(source.getSourceId());
        if (permanent != null && permanent.getAttachedTo() != null) {
            Permanent attachedTo = game.getPermanent(permanent.getAttachedTo());
            if (attachedTo != null && counter != null) {
                Counter newCounter = counter.copy();]]></codefragment>
   </duplication>
   <duplication lines="27" tokens="109">
      <file begintoken="258674" column="17" endcolumn="9" endline="128" endtoken="258782"
            line="102"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\DoUnlessAnyPlayerPaysEffect.java"/>
      <file begintoken="259779" column="17" endcolumn="9" endline="100" endtoken="259887"
            line="73"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\DoUnlessControllerPaysEffect.java"/>
      <codefragment><![CDATA[                }
            }
            // do the effects if nobody paid
            if (doEffect) {
                for (Effect effect : executingEffects) {
                    effect.setTargetPointer(this.targetPointer);
                    if (effect instanceof OneShotEffect) {
                        result &= effect.apply(game, source);
                    } else {
                        game.addEffect((ContinuousEffect) effect, source);
                    }
                }
            }
            return result;
        }
        return false;
    }

    protected Player getPayingPlayer(Game game, Ability source) {
        return game.getPlayer(source.getControllerId());
    }

    @Override
    public String getText(Mode mode) {
        if (!staticText.isEmpty()) {
            return staticText;
        }]]></codefragment>
   </duplication>
   <duplication lines="15" tokens="109">
      <file begintoken="399927" column="90" endcolumn="56" endline="121" endtoken="400035"
            line="107"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\FlashbackAbility.java"/>
      <file begintoken="403761" column="83" endcolumn="60" endline="412" endtoken="403869"
            line="398"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\ForetellAbility.java"/>
      <codefragment><![CDATA[                        spellAbilityCopy = ((ModalDoubleFacesCard) card).getRightHalfCard().getSpellAbility().copy();
                    }
                } else {
                    spellAbilityCopy = card.getSpellAbility().copy();
                }
                if (spellAbilityCopy == null) {
                    return null;
                }
                spellAbilityCopy.setId(this.getId());
                spellAbilityCopy.getManaCosts().clear();
                spellAbilityCopy.getManaCostsToPay().clear();
                spellAbilityCopy.getCosts().addAll(this.getCosts().copy());
                spellAbilityCopy.addCost(this.getManaCosts().copy());
                spellAbilityCopy.setSpellAbilityCastMode(this.getSpellAbilityCastMode());
                spellAbilityToResolve = spellAbilityCopy;]]></codefragment>
   </duplication>
   <duplication lines="32" tokens="109">
      <file begintoken="575812" column="9" endcolumn="14" endline="219" endtoken="575920"
            line="188"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Dungeon.java"/>
      <file begintoken="593706" column="9" endcolumn="14" endline="125" endtoken="593814"
            line="94"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\Plane.java"/>
      <codefragment><![CDATA[        return null;
    }

    @Override
    public UUID getControllerId() {
        return this.controllerId;
    }

    public void setControllerId(UUID controllerId) {
        this.controllerId = controllerId;
        this.abilites.setControllerId(controllerId);
    }

    @Override
    public void setCopy(boolean isCopy, MageObject copyFrom) {
        this.copy = isCopy;
        this.copyFrom = (copyFrom != null ? copyFrom.copy() : null);
    }

    @Override
    public boolean isCopy() {
        return this.copy;
    }

    @Override
    public MageObject getCopyFrom() {
        return this.copyFrom;
    }

    @Override
    public String getName() {
        return name;]]></codefragment>
   </duplication>
   <duplication lines="12" tokens="108">
      <file begintoken="189327" column="5" endcolumn="13" endline="111" endtoken="189434"
            line="100"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BoostAllEffect.java"/>
      <file begintoken="199373" column="5" endcolumn="13" endline="77" endtoken="199480"
            line="66"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainAbilityAllEffect.java"/>
      <codefragment><![CDATA[    }

    @Override
    public void init(Ability source, Game game) {
        super.init(source, game);
        setRuntimeData(source, game);
        if (this.affectedObjectsSet) {
            for (Permanent perm : game.getBattlefield().getActivePermanents(filter, source.getControllerId(), source, game)) {
                if (!(excludeSource && perm.getId().equals(source.getSourceId())) && selectedByRuntimeData(perm, source, game)) {
                    affectedObjectList.add(new MageObjectReference(perm, game));
                }
            }]]></codefragment>
   </duplication>
   <duplication lines="21" tokens="107">
      <file begintoken="118809" column="5" endcolumn="18" endline="94" endtoken="118915"
            line="74"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalContinuousEffect.java"/>
      <file begintoken="119579" column="5" endcolumn="18" endline="66" endtoken="119685"
            line="46"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalContinuousRuleModifyingEffect.java"/>
      <file begintoken="122158" column="5" endcolumn="18" endline="81" endtoken="122264"
            line="61"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalPreventionEffect.java"/>
      <file begintoken="122787" column="5" endcolumn="18" endline="74" endtoken="122893"
            line="54"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalReplacementEffect.java"/>
      <file begintoken="123432" column="5" endcolumn="18" endline="77" endtoken="123538"
            line="57"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalRequirementEffect.java"/>
      <file begintoken="124159" column="5" endcolumn="18" endline="76" endtoken="124265"
            line="56"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\decorator\ConditionalRestrictionEffect.java"/>
      <codefragment><![CDATA[    }

    @Override
    public void init(Ability source, Game game) {
        super.init(source, game);
        if (baseCondition instanceof LockedInCondition) {
            condition = new FixedCondition(((LockedInCondition) baseCondition).getBaseCondition().apply(game, source));
        } else {
            condition = baseCondition;
        }
        effect.setTargetPointer(this.targetPointer);
        effect.init(source, game);
        if (otherwiseEffect != null) {
            otherwiseEffect.setTargetPointer(this.targetPointer);
            otherwiseEffect.init(source, game);
        }
        initDone = true;
    }

    @Override
    public boolean apply(Layer layer, SubLayer sublayer, Ability source, Game game) {]]></codefragment>
   </duplication>
   <duplication lines="14" tokens="106">
      <file begintoken="559993" column="13" endcolumn="9" endline="351" endtoken="560098"
            line="338"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\combat\Combat.java"/>
      <file begintoken="560265" column="21" endcolumn="17" endline="385" endtoken="560370"
            line="372"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\combat\Combat.java"/>
      <codefragment><![CDATA[            for (Ability ab : bandsWithOther) {
                BandsWithOtherAbility ability = (BandsWithOtherAbility) ab;
                if (ability.getSubtype() != null) {
                    predicates.add(ability.getSubtype().getPredicate());
                }
                if (ability.getSupertype() != null) {
                    predicates.add(ability.getSupertype().getPredicate());
                }
                if (ability.getName() != null) {
                    predicates.add(new NamePredicate(ability.getName()));
                }
            }
            filter.add(Predicates.or(predicates));
        }]]></codefragment>
   </duplication>
   <duplication lines="15" tokens="106">
      <file begintoken="592795" column="58" endcolumn="31" endline="72" endtoken="592900"
            line="58"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\emblems\WrennAndSixEmblem.java"/>
      <file begintoken="592923" column="80" endcolumn="31" endline="88" endtoken="593028"
            line="74"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\command\emblems\WrennAndSixEmblem.java"/>
      <codefragment><![CDATA[                SplitCardHalf rightHalfCard = ((SplitCard) card).getRightHalfCard();
                if (leftHalfCard.isInstantOrSorcery(game)) {
                    Ability ability = new RetraceAbility(leftHalfCard);
                    ability.setSourceId(cardId);
                    ability.setControllerId(leftHalfCard.getOwnerId());
                    game.getState().addOtherAbility(leftHalfCard, ability);
                }
                if (rightHalfCard.isInstantOrSorcery(game)) {
                    Ability ability = new RetraceAbility(rightHalfCard);
                    ability.setSourceId(cardId);
                    ability.setControllerId(rightHalfCard.getOwnerId());
                    game.getState().addOtherAbility(rightHalfCard, ability);
                }
            }
            if (card instanceof ModalDoubleFacesCard) {]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="105">
      <file begintoken="190394" column="5" endcolumn="9" endline="100" endtoken="190498"
            line="88"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\BoostControlledEffect.java"/>
      <file begintoken="201052" column="5" endcolumn="9" endline="76" endtoken="201156"
            line="64"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainAbilityControlledEffect.java"/>
      <codefragment><![CDATA[    }

    @Override
    public void init(Ability source, Game game) {
        super.init(source, game);
        if (this.affectedObjectsSet) {
            for (Permanent perm : game.getBattlefield().getActivePermanents(filter, source.getControllerId(), source, game)) {
                if (perm.isControlledBy(source.getControllerId())
                        && !(excludeSource && perm.getId().equals(source.getSourceId()))) {
                    affectedObjectList.add(new MageObjectReference(perm, game));
                }
            }
        }]]></codefragment>
   </duplication>
   <duplication lines="17" tokens="105">
      <file begintoken="200340" column="45" endcolumn="27" endline="88" endtoken="200444"
            line="72"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainAbilityAttachedEffect.java"/>
      <file begintoken="204239" column="51" endcolumn="27" endline="74" endtoken="204343"
            line="58"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainAbilityWithAttachmentEffect.java"/>
      <codefragment><![CDATA[        return new GainAbilityAttachedEffect(this);
    }

    @Override
    public void init(Ability source, Game game) {
        super.init(source, game);
        if (affectedObjectsSet) {
            Permanent equipment = game.getPermanentOrLKIBattlefield(source.getSourceId());
            if (equipment != null && equipment.getAttachedTo() != null) {
                this.setTargetPointer(new FixedTarget(equipment.getAttachedTo(), game.getState().getZoneChangeCounter(equipment.getAttachedTo())));
            }
        }
    }

    @Override
    public boolean apply(Game game, Ability source) {
        Permanent permanent;]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="105">
      <file begintoken="635995" column="137" endcolumn="33" endline="2426"
            endtoken="636099"
            line="2414"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\GameImpl.java"/>
      <file begintoken="636109" column="72" endcolumn="29" endline="2438" endtoken="636213"
            line="2426"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\GameImpl.java"/>
      <codefragment><![CDATA[                                    if (!((FilterPermanent) auraFilter).match(attachedTo, perm.getControllerId(), perm.getSpellAbility(), this)
                                            || attachedTo.cantBeAttachedBy(perm, null, this, true)) {
                                        Card card = this.getCard(perm.getId());
                                        if (card != null && card.isCreature(this)) {
                                            UUID wasAttachedTo = perm.getAttachedTo();
                                            perm.attachTo(null, null, this);
                                            BestowAbility.becomeCreature(perm, this);
                                            fireEvent(new UnattachedEvent(wasAttachedTo, perm.getId(), perm, null));
                                        } else if (movePermanentToGraveyardWithInfo(perm)) {
                                            somethingHappened = true;
                                        }
                                    }
                                } else if (!auraFilter.match(attachedTo, this) || attachedTo.cantBeAttachedBy(perm, null, this, true)) {]]></codefragment>
   </duplication>
   <duplication lines="27" tokens="105">
      <file begintoken="835548" column="60" endcolumn="18" endline="105" endtoken="835652"
            line="79"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetAnyTarget.java"/>
      <file begintoken="843107" column="60" endcolumn="18" endline="105" endtoken="843211"
            line="79"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetCreatureOrPlayer.java"/>
      <file begintoken="850078" column="66" endcolumn="18" endline="90" endtoken="850182"
            line="72"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetPermanentOrPlayerAmount.java"/>
      <codefragment><![CDATA[            MageObject targetSource = game.getObject(source);
            if (permanent != null) {
                return permanent.canBeTargetedBy(targetSource, source.getControllerId(), game) && filter.match(permanent, source.getControllerId(), source, game);
            }
            if (player != null) {
                return player.canBeTargetedBy(targetSource, source.getControllerId(), game) && filter.match(player, game);
            }
        }

        if (permanent != null) {
            return filter.match(permanent, game);
        }
        return filter.match(player, game);
    }

    /**
     * Checks if there are enough {@link Permanent} or {@link Player} that can
     * be chosen. Should only be used for Ability targets since this checks for
     * protection, shroud etc.
     *
     * @param sourceControllerId - controller of the target event source
     * @param source
     * @param game
     * @return - true if enough valid {@link Permanent} or {@link Player} exist
     */
    @Override
    public boolean canChoose(UUID sourceControllerId, Ability source, Game game) {]]></codefragment>
   </duplication>
   <duplication lines="30" tokens="103">
      <file begintoken="206019" column="21" endcolumn="18" endline="139" endtoken="206121"
            line="110"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainControlAndUntapTargetEffect.java"/>
      <file begintoken="206668" column="21" endcolumn="18" endline="136" endtoken="206770"
            line="107"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\continuous\GainControlTargetEffect.java"/>
      <codefragment><![CDATA[                    controlChanged = true;
                }
            }
            if (source instanceof ActivatedAbility
                    && firstControlChange && !controlChanged) {
                // If it was not possible to get control of target permanent by the activated ability the first time it took place
                // the effect failed (e.g. because of Guardian Beast) and must be discarded
                // This does not handle correctly multiple targets at once
                discard();
            }
            if (condition != null && !condition.apply(game, source)) {
                discard();
            }
        }
        // no valid target exists and the controller is no longer in the game, effect can be discarded
        if (!oneTargetStillExists || !controller.isInGame()) {
            discard();
        }
        firstControlChange = false;
        return true;
    }

    @Override
    public String getText(Mode mode) {
        if (!staticText.isEmpty()) {
            return staticText;
        }

        if (mode.getTargets().isEmpty()) {
            return "gain control of target permanent until end of turn. Untap it.";]]></codefragment>
   </duplication>
   <duplication lines="18" tokens="103">
      <file begintoken="400160" column="61" endcolumn="26" endline="167" endtoken="400262"
            line="150"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\FlashbackAbility.java"/>
      <file begintoken="403939" column="64" endcolumn="30" endline="450" endtoken="404041"
            line="433"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\keyword\ForetellAbility.java"/>
      <codefragment><![CDATA[        StringBuilder sbRule = new StringBuilder("Flashback");
        if (!costs.isEmpty()) {
            sbRule.append("&mdash;");
        } else {
            sbRule.append(' ');
        }
        if (!manaCosts.isEmpty()) {
            sbRule.append(manaCosts.getText());
        }
        if (!costs.isEmpty()) {
            if (!manaCosts.isEmpty()) {
                sbRule.append(", ");
            }
            sbRule.append(costs.getText());
            sbRule.append('.');
        }
        if (abilityName != null) {
            sbRule.append(". ");]]></codefragment>
   </duplication>
   <duplication lines="26" tokens="102">
      <file begintoken="843324" column="102" endcolumn="16" endline="142" endtoken="843425"
            line="117"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetCreatureOrPlayer.java"/>
      <file begintoken="849180" column="103" endcolumn="16" endline="162" endtoken="849281"
            line="136"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetPermanentOrPlayer.java"/>
      <codefragment><![CDATA[        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getCreatureFilter(), sourceControllerId, game)) {
            if (permanent.canBeTargetedBy(targetSource, sourceControllerId, game) && filter.match(permanent, sourceControllerId, source, game)) {
                count++;
                if (count >= this.minNumberOfTargets) {
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * Checks if there are enough {@link Permanent} or {@link Player} that can
     * be selected. Should not be used for Ability targets since this does not
     * check for protection, shroud etc.
     *
     * @param sourceControllerId - controller of the select event
     * @param game
     * @return - true if enough valid {@link Permanent} or {@link Player} exist
     */
    @Override
    public boolean canChoose(UUID sourceControllerId, Game game) {
        int count = 0;
        for (UUID playerId : game.getState().getPlayersInRange(sourceControllerId, game)) {
            Player player = game.getPlayer(playerId);
            if (filter.match(player, game)) {]]></codefragment>
   </duplication>
   <duplication lines="12" tokens="101">
      <file begintoken="90050" column="5" endcolumn="72" endline="37" endtoken="90150"
            line="26"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\costs\common\CyclingDiscardCost.java"/>
      <file begintoken="90582" column="5" endcolumn="72" endline="42" endtoken="90682"
            line="31"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\costs\common\DiscardSourceCost.java"/>
      <codefragment><![CDATA[    }

    @Override
    public boolean canPay(Ability ability, Ability source, UUID controllerId, Game game) {
        return game.getPlayer(controllerId).getHand().contains(source.getSourceId());
    }

    @Override
    public boolean pay(Ability ability, Game game, Ability source, UUID controllerId, boolean noMana, Cost costToPay) {
        Player player = game.getPlayer(controllerId);
        if (player != null) {
            Card card = player.getHand().get(source.getSourceId(), game);]]></codefragment>
   </duplication>
   <duplication lines="23" tokens="100">
      <file begintoken="255394" column="45" endcolumn="61" endline="62" endtoken="255493"
            line="40"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\DontUntapInControllersNextUntapStepSourceEffect.java"/>
      <file begintoken="257691" column="71" endcolumn="61" endline="82" endtoken="257790"
            line="60"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\abilities\effects\common\DontUntapInPlayersNextUntapStepAllEffect.java"/>
      <codefragment><![CDATA[            return "{this} doesn't untap (" + mageObject.getLogName() + ')';
        }
        return null;
    }

    @Override
    public boolean checksEventType(GameEvent event, Game game) {
        return event.getType() == GameEvent.EventType.UNTAP_STEP || event.getType() == GameEvent.EventType.UNTAP;
    }

    @Override
    public boolean applies(GameEvent event, Ability source, Game game) {
        // the check for turn number is needed if multiple effects are added to prevent untap in next untap step
        // if we don't check for turn number, every turn only one effect would be used instead of correctly consuming
        // all existing skip the next untap step effects.
        
        // Discard effect if related to a previous turn
        if (validForTurnNum > 0 && validForTurnNum < game.getTurnNum()) {
            discard();
            return false;
        }
        // remember the turn of the untap step the effect has to be applied
        if (event.getType() == GameEvent.EventType.UNTAP_STEP]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="100">
      <file begintoken="569886" column="9" endcolumn="57" endline="320" endtoken="569985"
            line="308"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\combat\CombatGroup.java"/>
      <file begintoken="570499" column="13" endcolumn="61" endline="400" endtoken="570598"
            line="388"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\game\combat\CombatGroup.java"/>
      <codefragment><![CDATA[        int damage = getDamageValueFromPermanent(attacker, game);
        if (canDamage(attacker, first)) {
            // must be set before attacker damage marking because of effects like Test of Faith
            Map<UUID, Integer> blockerPower = new HashMap<>();
            for (UUID blockerId : blockerOrder) {
                Permanent blocker = game.getPermanent(blockerId);
                if (canDamage(blocker, first)) {
                    if (checkSoleBlockerAfter(blocker, game)) { // blocking several creatures handled separately
                        blockerPower.put(blockerId, getDamageValueFromPermanent(blocker, game));
                    }
                }
            }
            Map<UUID, Integer> assigned = new HashMap<>();]]></codefragment>
   </duplication>
   <duplication lines="19" tokens="100">
      <file begintoken="836057" column="45" endcolumn="13" endline="194" endtoken="836156"
            line="176"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetAnyTarget.java"/>
      <file begintoken="852937" column="50" endcolumn="13" endline="202" endtoken="853036"
            line="188"
            path="D:\eclipse-workspace\mage-master\mageProyectAnalisis\Mage\src\main\java\mage\target\common\TargetSpellOrPermanent.java"/>
      <codefragment><![CDATA[                possibleTargets.add(playerId);
            }
        }

        for (Permanent permanent : game.getBattlefield().getActivePermanents(filter.getPermanentFilter(), sourceControllerId, game)) {
            if (permanent.canBeTargetedBy(targetSource, sourceControllerId, game)
                    && filter.match(permanent, sourceControllerId, source, game)) {
                possibleTargets.add(permanent.getId());
            }
        }

        return possibleTargets;
    }

    @Override
    public Set<UUID> possibleTargets(UUID sourceControllerId, Game game) {
        Set<UUID> possibleTargets = new HashSet<>();

        for (UUID playerId : game.getState().getPlayersInRange(sourceControllerId, game)) {]]></codefragment>
   </duplication>
</pmd-cpd>