mage.deck.AbstractCommander#validate(Lmage/cards/decks/Deck;)Z
java.util.HashSet#<init>(Ljava/util/Collection;)V
mage.util.CardUtil#castStream(Ljava/util/stream/Stream;Ljava/lang/Class;)Ljava/util/stream/Stream;
mage.abilities.keyword.CompanionAbility#isLegal(Ljava/util/Set;I)Z
java.util.HashSet#instance-init#
java.lang.String#format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
mage.filter.FilterMana#<init>()V
java.util.HashSet#<init>()V
mage.filter.FilterMana#instance-init#
java.util.HashMap#<init>()V
mage.util.ManaUtil#collectColorIdentity(Lmage/filter/FilterMana;Lmage/filter/FilterMana;)V
java.util.Optional#orElse(Ljava/lang/Object;)Ljava/lang/Object;
java.util.HashMap#instance-init#
mage.abilities.keyword.CompanionAbility#getLegalRule()Ljava/lang/String;
mage.deck.AbstractCommander#checkColorIdentity(Lmage/cards/decks/Deck;Lmage/filter/FilterMana;Ljava/util/Set;)Z
==
getDeckMinSize mage.deck.AbstractCommander#getDeckMinSize()I
checkBanned mage.deck.AbstractCommander#checkBanned(Ljava/util/Map;)Z
checkPartners mage.deck.AbstractCommander#checkPartners(Ljava/util/Set;)Z
checkCommander mage.deck.AbstractCommander#checkCommander(Lmage/cards/Card;Ljava/util/Set;)Z