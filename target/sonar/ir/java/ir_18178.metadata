mage.players.PlayerImpl#playLand(Lmage/cards/Card;Lmage/game/Game;Z)Z
mage.abilities.ActivatedAbility$ActivationStatus#getApprovingObject()Lmage/ApprovingObject;
mage.util.GameLog#replaceNameByColoredName(Lmage/MageObject;Ljava/lang/String;Lmage/MageObject;)Ljava/lang/String;
mage.abilities.SpellAbility#instance-init#
mage.game.events.GameEvent#getEvent(Lmage/game/events/GameEvent$EventType;Ljava/util/UUID;Lmage/abilities/Ability;Ljava/util/UUID;Lmage/ApprovingObject;)Lmage/game/events/GameEvent;
mage.abilities.SpellAbility#<init>(Lmage/abilities/costs/mana/ManaCost;Ljava/lang/String;Lmage/constants/Zone;Lmage/constants/SpellAbilityType;)V
mage.abilities.ActivatedAbility$ActivationStatus#canActivate()Z
mage.util.GameLog#getColoredObjectIdName(Lmage/MageObject;)Ljava/lang/String;
==
getId mage.players.PlayerImpl#getId()Ljava/util/UUID;
isActivePlayer mage.players.PlayerImpl#isActivePlayer(Lmage/game/Game;)Z
getLogName mage.players.PlayerImpl#getLogName()Ljava/lang/String;
resetStoredBookmark mage.players.PlayerImpl#resetStoredBookmark(Lmage/game/Game;)V
canPlayLand mage.players.PlayerImpl#canPlayLand()Z
cast mage.players.PlayerImpl#cast(Lmage/abilities/SpellAbility;Lmage/game/Game;ZLmage/ApprovingObject;)Z
moveCards mage.players.PlayerImpl#moveCards(Lmage/cards/Card;Lmage/constants/Zone;Lmage/abilities/Ability;Lmage/game/Game;ZZZLjava/util/List;)Z