mage.cards.mock.MockSplitCard#<init>(Lmage/cards/repository/CardInfo;)V
mage.cards.repository.CardInfo#getRules()Ljava/util/List;
mage.cards.CardSetInfo#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lmage/constants/Rarity;)V
mage.cards.repository.CardRepository#findCardWithPreferredSetAndNumber(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lmage/cards/repository/CardInfo;
mage.cards.mock.MockSplitCard#getSpellAbilityType(Lmage/cards/repository/CardInfo;)Lmage/constants/SpellAbilityType;
mage.cards.repository.CardInfo#getSubTypes()Lmage/util/SubTypes;
mage.cards.mock.MockSplitCard#getLeftHalfName(Lmage/cards/repository/CardInfo;)Ljava/lang/String;
mage.cards.repository.CardInfo#getTypes()Ljava/util/List;
mage.cards.mock.MockSplitCard#mageIntFromString(Ljava/lang/String;)Lmage/MageInt;
mage.cards.mock.MockSplitCard#getRightHalfName(Lmage/cards/repository/CardInfo;)Ljava/lang/String;
mage.cards.mock.MockSplitCard#textAbilityFromString(Ljava/lang/String;)Lmage/abilities/Ability;
mage.cards.repository.CardInfo#getSupertypes()Ljava/util/Set;
mage.cards.mock.MockCard#instance-init#
mage.cards.mock.MockSplitCard#join(Ljava/util/List;)Ljava/lang/String;
mage.cards.CardSetInfo#instance-init#
mage.cards.repository.CardInfo#getManaCosts(Lmage/cards/repository/CardInfo$ManaCostSide;)Ljava/util/List;
mage.cards.mock.MockSplitCardHalf#instance-init#
java.lang.String#isEmpty()Z
mage.cards.repository.CardRepository#findCardWithPreferredSetAndNumber(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lmage/cards/repository/CardInfo;
mage.cards.mock.MockSplitCardHalf#<init>(Lmage/cards/repository/CardInfo;)V
mage.cards.mock.MockCard#<init>(Lmage/cards/repository/CardInfo;)V